import{_ as e,c as a,o as t,a5 as o}from"./chunks/framework.-E9IboRH.js";const m=JSON.parse('{"title":"应用题：如何处理文本溢出的省略？","description":"","frontmatter":{},"headers":[],"relativePath":"汇总面试题/前端CSS/应用题/应用题：如何处理文本溢出的省略？.md","filePath":"汇总面试题/前端CSS/应用题/应用题：如何处理文本溢出的省略？.md"}'),_={name:"汇总面试题/前端CSS/应用题/应用题：如何处理文本溢出的省略？.md"},r=o('<h1 id="应用题-如何处理文本溢出的省略" tabindex="-1">应用题：如何处理文本溢出的省略？ <a class="header-anchor" href="#应用题-如何处理文本溢出的省略" aria-label="Permalink to &quot;应用题：如何处理文本溢出的省略？&quot;">​</a></h1><h2 id="单行" tabindex="-1">单行 <a class="header-anchor" href="#单行" aria-label="Permalink to &quot;单行&quot;">​</a></h2><p>实现方式也很简单，涉及的 css 属性有：</p><p>text-overflow：规定当文本溢出时，显示省略符号来代表被修剪的文本 white-space：设置文字在一行显示，不能换行 overflow：文字长度超出限定宽度，则隐藏超出的内容</p><h1 id="多行" tabindex="-1">多行 <a class="header-anchor" href="#多行" aria-label="Permalink to &quot;多行&quot;">​</a></h1><p>display: -webkit-box; -webkit-line-clamp: 2; -webkit-box-orient: vertical; overflow: hidden;</p>',6),i=[r];function s(n,c,l,d,h,p){return t(),a("div",null,i)}const b=e(_,[["render",s]]);export{m as __pageData,b as default};
