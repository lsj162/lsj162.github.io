import{_ as i,o as e,c as p,R as l}from"./chunks/framework.FQOLfzW2.js";const m=JSON.parse('{"title":"TypeScript","description":"","frontmatter":{},"headers":[],"relativePath":"前端/TypeScript/index.md","filePath":"前端/TypeScript/index.md"}'),t={name:"前端/TypeScript/index.md"},a=l('<h1 id="typescript" tabindex="-1">TypeScript <a class="header-anchor" href="#typescript" aria-label="Permalink to &quot;TypeScript&quot;">​</a></h1><p>TypeScript 是一种 JavaScript 扩展集成，可以让 JavaScript 具有类型语法，构建的<code>强类型编程</code>语言工具。</p><div class="tip custom-block"><p class="custom-block-title">用途</p><p>TypeScript 以支持与编辑器更紧密的。在编辑器中尽早发现错误。</p></div><h3 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h3><p><a href="https://www.typescriptlang.org/docs/" target="_blank" rel="noreferrer">官网：- 开发文档：https://www.typescriptlang.org/docs/</a></p><p><a href="https://wangdoc.com/typescript/" target="_blank" rel="noreferrer">阮一峰 TypeScript 教程文档：https://wangdoc.com/typescript/</a></p><h2 id="基础文档" tabindex="-1">基础文档 <a class="header-anchor" href="#基础文档" aria-label="Permalink to &quot;基础文档&quot;">​</a></h2><p><a href="/前端/TypeScript/教程/基本用法/any 类型/">教程</a></p><ul><li><p>目录</p><ul><li><p>基本用法</p><ul><li>类型系统</li><li>数组</li><li>元组</li><li>运算符</li><li>类型映射</li><li>any 类型</li><li>symbol 类型</li><li>Enum 类型</li><li>interface</li><li>类型断言</li></ul></li><li><p>函数</p></li><li><p>对象</p></li><li><p>类</p></li><li><p>泛型</p></li><li><p>模块</p></li><li><p>装饰器</p></li><li><p>namespace</p></li><li><p>declare 关键字</p></li><li><p>d.ts 类型声明文件</p></li><li><p>类型工具</p></li><li><p>注释指令</p></li><li><p>tsconfig.json 文件</p></li></ul></li></ul>',9),r=[a];function c(o,s,n,d,_,h){return e(),p("div",null,r)}const y=i(t,[["render",c]]);export{m as __pageData,y as default};
