import{_ as a,c as s,o as e,a6 as n}from"./chunks/framework.DwCPU-X7.js";const _=JSON.parse('{"title":"CORS 跨域解决方案（推荐）🔥","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"前端/HTML/浏览器模型/CORS 通信.md","filePath":"前端/HTML/浏览器模型/CORS 通信.md","lastUpdated":1712399324000}'),p={name:"前端/HTML/浏览器模型/CORS 通信.md"},t=n(`<h1 id="cors-跨域解决方案-推荐-🔥" tabindex="-1">CORS 跨域解决方案（推荐）🔥 <a class="header-anchor" href="#cors-跨域解决方案-推荐-🔥" aria-label="Permalink to &quot;CORS 跨域解决方案（推荐）🔥&quot;">​</a></h1><p>跨源资源共享（CORS） 是一个 W3C 标准，全称是“跨源资源共享”（Cross-origin resource sharing），允许 ajax 跨域请求。</p><p>实现 CORS 通信的关键是服务器。只要服务器实现了 CORS 接口，就可以跨源通信。</p><h2 id="什么情况下需要-cors" tabindex="-1">什么情况下需要 CORS？ <a class="header-anchor" href="#什么情况下需要-cors" aria-label="Permalink to &quot;什么情况下需要 CORS？&quot;">​</a></h2><p>前文提到的由 XMLHttpRequest 或 Fetch API 发起的跨源 HTTP 请求。</p><h2 id="服务器如何实现-cors" tabindex="-1">服务器如何实现 CORS？ <a class="header-anchor" href="#服务器如何实现-cors" aria-label="Permalink to &quot;服务器如何实现 CORS？&quot;">​</a></h2><p>CORS 请求分成两类：简单请求（simple request）和非简单请求（not-so-simple request）。</p><h3 id="简单请求" tabindex="-1">简单请求 <a class="header-anchor" href="#简单请求" aria-label="Permalink to &quot;简单请求&quot;">​</a></h3><p>服务端返回的标头的 <code>Access-Control-Allow-Origin: *</code> 值表明，该资源可以被任意外源访问。</p><p>简单请求需要满足所有下述条件：</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span>请求方法之一：</span></span>
<span class="line"><span>GET</span></span>
<span class="line"><span>HEAD</span></span>
<span class="line"><span>POST</span></span>
<span class="line"><span></span></span>
<span class="line"><span>标头集合为：</span></span>
<span class="line"><span>Accept</span></span>
<span class="line"><span>Accept-Language</span></span>
<span class="line"><span>Content-Language</span></span>
<span class="line"><span>Content-Type（需要注意额外的限制）</span></span>
<span class="line"><span>Range（只允许简单的范围标头值 如 bytes=256- 或 bytes=127-255）</span></span>
<span class="line"><span></span></span>
<span class="line"><span>Content-Type 标头所指定的媒体类型的值仅限于下列三者之一：</span></span>
<span class="line"><span>text/plain</span></span>
<span class="line"><span>multipart/form-data</span></span>
<span class="line"><span>application/x-www-form-urlencoded</span></span></code></pre></div><h3 id="非简单请求" tabindex="-1">非简单请求 <a class="header-anchor" href="#非简单请求" aria-label="Permalink to &quot;非简单请求&quot;">​</a></h3><p>非简单请求，就自动发出一个“预检”请求。</p><p>如果开启 withCredentials 属性，发送 Cookie。</p><p>服务器不能将 Access-Control-Allow-Origin 的值设为通配符“*”，而应将其设置为特定的域，如：Access-Control-Allow-Origin: <a href="https://example.com" target="_blank" rel="noreferrer">https://example.com</a>。</p><h2 id="其他方案-不推荐" tabindex="-1">其他方案（不推荐） <a class="header-anchor" href="#其他方案-不推荐" aria-label="Permalink to &quot;其他方案（不推荐）&quot;">​</a></h2><div class="note custom-block github-alert"><p class="custom-block-title">NOTE</p><p>除非特殊（ie 都没了），否则建议禁止。减少项目维护成本和复杂度。</p></div><p>JSONP；</p><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS" target="_blank" rel="noreferrer">跨源资源共享（CORS） https://developer.mozilla.org/zh-CN/docs/Web/HTTP/CORS</a></p>`,20),l=[t];function o(r,i,c,h,d,u){return e(),s("div",null,l)}const m=a(p,[["render",o]]);export{_ as __pageData,m as default};
