import{_ as a,c as t,o as n,m as e,a as r}from"./chunks/framework.AYenO5Lm.js";const v=JSON.parse('{"title":"ArrayBuffer","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"前端/JavaScript/备份/内置对象/结构化数据/ArrayBuffer/index.md","filePath":"前端/JavaScript/备份/内置对象/结构化数据/ArrayBuffer/index.md"}'),f={name:"前端/JavaScript/备份/内置对象/结构化数据/ArrayBuffer/index.md"},o=e("h1",{id:"arraybuffer",tabindex:"-1"},[r("ArrayBuffer "),e("a",{class:"header-anchor",href:"#arraybuffer","aria-label":'Permalink to "ArrayBuffer"'},"​")],-1),s=e("p",null,"ArrayBuffer 对象用来表示通用的、固定长度的原始二进制数据缓冲区。",-1),i=e("p",null,"它是一个字节数组，通常在其他语言中称为“byte array”。你不能直接操作 ArrayBuffer 中的内容；而是要通过类型化数组对象或 DataView 对象来操作，它们会将缓冲区中的数据表示为特定的格式，并通过这些格式来读写缓冲区的内容。",-1),c=e("p",null,"ArrayBuffer() (en-US) 构造函数创建一个以字节为单位的给定长度的新 ArrayBuffer。你也可以从现有的数据（例如，从 Base64 字符串或者从本地文件）获取数组缓冲区。",-1),d=e("p",null,"ArrayBuffer 是一个可转移对象。",-1),l=e("h2",{id:"实例方法",tabindex:"-1"},[r("实例方法 "),e("a",{class:"header-anchor",href:"#实例方法","aria-label":'Permalink to "实例方法"'},"​")],-1),u=e("p",null,"ArrayBuffer.prototype.slice() 返回一个新的 ArrayBuffer，它的内容是该 ArrayBuffer 从 begin（包括）到 end（不包括）字节的拷贝。如果 begin 或 end 是负数，它则指的是从数组末尾开始的索引，而不是从头开始的索引。",-1),_=[o,s,i,c,d,l,u];function p(h,y,B,A,m,x){return n(),t("div",null,_)}const S=a(f,[["render",p]]);export{v as __pageData,S as default};
