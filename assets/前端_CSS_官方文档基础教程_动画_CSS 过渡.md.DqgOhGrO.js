import{_ as a,c as t,o as i,a6 as n}from"./chunks/framework.DwCPU-X7.js";const _=JSON.parse('{"title":"过渡","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"前端/CSS/官方文档基础教程/动画/CSS 过渡.md","filePath":"前端/CSS/官方文档基础教程/动画/CSS 过渡.md","lastUpdated":null}'),s={name:"前端/CSS/官方文档基础教程/动画/CSS 过渡.md"},e=n(`<p><a href="/前端/CSS/">返回</a></p><h1 id="过渡" tabindex="-1">过渡 <a class="header-anchor" href="#过渡" aria-label="Permalink to &quot;过渡&quot;">​</a></h1><p>CSS 过渡通常使用简写属性 transition 控制。这是最好的方式，可以避免属性值列表长度不一，节省在 CSS 代码上调试的时间。</p><p>也可以用下面子属性来控制过渡的各部分：</p><h2 id="transition-property" tabindex="-1">transition-property <a class="header-anchor" href="#transition-property" aria-label="Permalink to &quot;transition-property&quot;">​</a></h2><p>指定哪个或哪些 CSS 属性用于过渡。只有指定的属性才会在过渡中发生动画，其他属性仍如通常那样瞬间变化。</p><h2 id="transition-duration" tabindex="-1">transition-duration <a class="header-anchor" href="#transition-duration" aria-label="Permalink to &quot;transition-duration&quot;">​</a></h2><p>指定过渡的时长。你可以为所有属性指定一个值，或者指定多个值，或者为每个属性指定不同的时长。</p><h2 id="transition-timing-function" tabindex="-1">transition-timing-function <a class="header-anchor" href="#transition-timing-function" aria-label="Permalink to &quot;transition-timing-function&quot;">​</a></h2><p>指定一个函数，定义属性值怎么变化。缓动函数定义属性如何计算。大多数缓动函数由四点定义一个立方贝塞尔曲线。也可以从 Easing Functions Cheat Sheet 选择缓动效果。</p><h2 id="transition-delay" tabindex="-1">transition-delay <a class="header-anchor" href="#transition-delay" aria-label="Permalink to &quot;transition-delay&quot;">​</a></h2><p>指定延迟，即属性开始变化时与过渡开始发生时之间的时长。</p><h2 id="transition-简写属性-css-语法如下" tabindex="-1">transition 简写属性 CSS 语法如下： <a class="header-anchor" href="#transition-简写属性-css-语法如下" aria-label="Permalink to &quot;transition 简写属性 CSS 语法如下：&quot;">​</a></h2><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  transition</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: &lt;property&gt; &lt;duration&gt; &lt;timing-function&gt; &lt;delay&gt;;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,14),r=[e];function o(l,p,h,d,c,u){return i(),t("div",null,r)}const k=a(s,[["render",o]]);export{_ as __pageData,k as default};
