import{_ as a,o as e,c as t,R as o}from"./chunks/framework.FQOLfzW2.js";const x=JSON.parse('{"title":"XSS 跨站脚本攻击","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"计算机原理与网络/网络安全/XSS 跨站脚本攻击/index.md","filePath":"计算机原理与网络/网络安全/XSS 跨站脚本攻击/index.md"}'),r={name:"计算机原理与网络/网络安全/XSS 跨站脚本攻击/index.md"},i=o('<h1 id="xss-跨站脚本攻击" tabindex="-1">XSS 跨站脚本攻击 <a class="header-anchor" href="#xss-跨站脚本攻击" aria-label="Permalink to &quot;XSS 跨站脚本攻击&quot;">​</a></h1><p>XSS（跨站脚本攻击）的基本原理是攻击者通过在目标网站上注入恶意脚本，使得用户在访问该网站时执行这些脚本。这些脚本通常是由用户的浏览器执行的，因此攻击者可以利用这一点来窃取用户的敏感信息、劫持用户会话，或者篡改网页内容。</p><h2 id="攻击者的一般步骤如下" tabindex="-1">攻击者的一般步骤如下： <a class="header-anchor" href="#攻击者的一般步骤如下" aria-label="Permalink to &quot;攻击者的一般步骤如下：&quot;">​</a></h2><p>注入恶意代码： 攻击者通过一些手段（例如在搜索框、评论框、或其他用户输入的地方）向目标网站注入恶意代码。这可以是 JavaScript 代码或其他可执行的脚本。</p><p>用户访问受感染页面： 用户在浏览目标网站时，浏览器会加载包含恶意代码的页面。</p><p>恶意代码执行： 由于浏览器执行了恶意代码，攻击者可以利用这个执行环境来执行各种恶意操作。这可能包括窃取用户的 Cookie（包含用户会话信息）、修改网页内容、重定向用户到其他恶意网站等。</p><h2 id="有两种主要的-xss-攻击类型" tabindex="-1">有两种主要的 XSS 攻击类型： <a class="header-anchor" href="#有两种主要的-xss-攻击类型" aria-label="Permalink to &quot;有两种主要的 XSS 攻击类型：&quot;">​</a></h2><p>存储型（Stored XSS）： 攻击者将恶意代码存储在目标网站的数据库中，当其他用户访问包含这些恶意代码的页面时，就会执行这些代码。</p><p>反射型（Reflected XSS）： 攻击者将恶意代码附加到特定的 URL 中，当用户点击包含这个恶意代码的链接时，代码就会在用户的浏览器中执行。</p><h2 id="为了防范-xss-攻击-开发者可以采取以下措施" tabindex="-1">为了防范 XSS 攻击，开发者可以采取以下措施： <a class="header-anchor" href="#为了防范-xss-攻击-开发者可以采取以下措施" aria-label="Permalink to &quot;为了防范 XSS 攻击，开发者可以采取以下措施：&quot;">​</a></h2><p>输入验证： 对用户输入进行有效的验证，确保只接受合法的输入。</p><p>输出编码： 在将用户输入输出到网页时，进行适当的编码，防止浏览器将其解释为可执行的脚本。</p><p>使用 HTTP Only 标志： 将 Cookie 标记为 HTTP Only，这样浏览器将不允许通过 JavaScript 访问 Cookie，减少了被窃取的风险。</p><p>实施内容安全策略（CSP）： CSP 是一种安全机制，通过白名单控制哪些资源可以加载到网页中，可以有效减少 XSS 攻击的风险。</p><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h2><p>Ai 智能</p>',16),s=[i];function n(S,p,d,l,c,h){return e(),t("div",null,s)}const u=a(r,[["render",n]]);export{x as __pageData,u as default};
