import{_ as t,c as e,o as i,a5 as p}from"./chunks/framework.-E9IboRH.js";const P=JSON.parse('{"title":"http 请求和响应的头信息？🔥","description":"","frontmatter":{},"headers":[],"relativePath":"汇总面试题/网络/2. HTTP协议/http请求和响应的头信息？🔥.md","filePath":"汇总面试题/网络/2. HTTP协议/http请求和响应的头信息？🔥.md"}'),a={name:"汇总面试题/网络/2. HTTP协议/http请求和响应的头信息？🔥.md"},l=p('<h1 id="http-请求和响应的头信息-🔥" tabindex="-1">http 请求和响应的头信息？🔥 <a class="header-anchor" href="#http-请求和响应的头信息-🔥" aria-label="Permalink to &quot;http 请求和响应的头信息？🔥&quot;">​</a></h1><p>HTTP 请求和响应中的头部信息（Header）是包含有关请求或响应的元数据的部分，用于传递各种控制信息、描述信息和其他相关信息。头部信息包含在 HTTP 报文的起始部分，分为请求头部和响应头部。</p><h3 id="http-请求头部" tabindex="-1">HTTP 请求头部： <a class="header-anchor" href="#http-请求头部" aria-label="Permalink to &quot;HTTP 请求头部：&quot;">​</a></h3><ol><li><p>Host： 指定请求的目标主机和端口号，允许在同一台物理服务器上托管多个域名。</p></li><li><p>User-Agent： 包含了发起请求的用户代理（浏览器、爬虫等）的信息，可以用于服务器识别客户端的类型。</p></li><li><p>Accept： 指定客户端可接受的响应内容类型，通常为 MIME 类型，用逗号分隔多个类型。</p></li><li><p>Accept-Language： 客户端可接受的自然语言，用于指定首选的响应语言。</p></li><li><p>Accept-Encoding： 客户端可接受的内容编码方式，如 gzip、deflate 等。</p></li><li><p>Referer： 表示当前请求是从哪个 URL 过来的，用于追踪请求的来源。</p></li><li><p>Cookie： 包含了之前服务器通过 Set-Cookie 设置的 HTTP Cookie，用于保持状态信息。</p></li><li><p>Authorization： 包含用于进行身份验证的凭证信息，通常用于 HTTP 基本认证。</p></li></ol><h3 id="http-响应头部" tabindex="-1">HTTP 响应头部： <a class="header-anchor" href="#http-响应头部" aria-label="Permalink to &quot;HTTP 响应头部：&quot;">​</a></h3><ol><li><p>Status-Line： 包含 HTTP 响应状态码、原因短语和 HTTP 版本号。</p></li><li><p>Content-Type： 指定响应体的媒体类型，如 text/html、application/json 等。</p></li><li><p>Content-Length： 指定响应体的长度，以字节为单位。</p></li><li><p>Server： 服务器的信息，标识响应中的服务器软件类型和版本。</p></li><li><p>Date： 表示响应生成的日期和时间。</p></li><li><p>Location： 用于重定向，指定客户端应该跳转的新的 URL。</p></li><li><p>Set-Cookie： 用于在响应中向客户端设置 Cookie。</p></li><li><p>Cache-Control： 控制缓存的行为，如 max-age、no-cache 等。</p></li><li><p>Expires： 指定响应的过期时间，告诉客户端在此时间之后应该重新获取新的资源。</p></li></ol><p>头部信息提供了关于请求或响应的重要信息，对于控制请求和响应的行为、优化性能以及实现一些功能（如身份验证、缓存控制等）非常重要。</p>',7),o=[l];function n(r,h,_,c,T,s){return i(),e("div",null,o)}const H=t(a,[["render",n]]);export{P as __pageData,H as default};
