import{_,c as t,o,m as e,a as n}from"./chunks/framework.-E9IboRH.js";const E=JSON.parse('{"title":"浏览器中的事件循环（Event Loop）是什么？微任务和宏任务的执行顺序是怎样的？","description":"","frontmatter":{},"headers":[],"relativePath":"汇总面试题/浏览器/🤔️浏览器中的事件循环（Event Loop）是什么？微任务和宏任务的执行顺序是怎样的？.md","filePath":"汇总面试题/浏览器/🤔️浏览器中的事件循环（Event Loop）是什么？微任务和宏任务的执行顺序是怎样的？.md"}'),a={name:"汇总面试题/浏览器/🤔️浏览器中的事件循环（Event Loop）是什么？微任务和宏任务的执行顺序是怎样的？.md"},l=e("h1",{id:"浏览器中的事件循环-event-loop-是什么-微任务和宏任务的执行顺序是怎样的",tabindex:"-1"},[n("浏览器中的事件循环（Event Loop）是什么？微任务和宏任务的执行顺序是怎样的？ "),e("a",{class:"header-anchor",href:"#浏览器中的事件循环-event-loop-是什么-微任务和宏任务的执行顺序是怎样的","aria-label":'Permalink to "浏览器中的事件循环（Event Loop）是什么？微任务和宏任务的执行顺序是怎样的？"'},"​")],-1),s=e("p",null,"浏览器中的事件循环（Event Loop）是一种机制，确保代码的执行顺序，异步任务的正确执行。事件循环负责处理各种事件（如用户交互、定时器、网络请求等）并将它们排队以便执行。",-1),r=e("ol",null,[e("li",null,"执行同步任务：直到调用栈为空"),e("li",null,"执行微任务队列：检查，所有微任务是否完成（通常包括 Promise 的回调函数）"),e("li",null,"执行宏任务队列中的一个任务：检查，是否有宏任务要执行（宏任务包括 setTimeout、setInterval、requestAnimationFrame、I/O 操作等）。"),e("li",null,"重复上述步骤")],-1),i=[l,s,r];function c(p,d,m,u,v,h){return o(),t("div",null,i)}const L=_(a,[["render",c]]);export{E as __pageData,L as default};
