import{_ as a,c as i,o as n,a5 as t}from"./chunks/framework.AYenO5Lm.js";const f=JSON.parse('{"title":"动画","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"前端/CSS/目录/CSS 动画/index.md","filePath":"前端/CSS/目录/CSS 动画/index.md"}'),e={name:"前端/CSS/目录/CSS 动画/index.md"},o=t('<p><a href="/前端/CSS/">返回</a></p><h1 id="动画" tabindex="-1">动画 <a class="header-anchor" href="#动画" aria-label="Permalink to &quot;动画&quot;">​</a></h1><p>创建动画序列，需要使用 animation 属性或其子属性，该属性允许配置动画时间、时长以及其他动画细节，但该属性不能配置动画的实际表现，动画的实际表现是由 @keyframes 规则实现，具体情况参见使用 keyframes 定义动画序列小节部分。</p><h2 id="animation-的子属性有" tabindex="-1">animation 的子属性有： <a class="header-anchor" href="#animation-的子属性有" aria-label="Permalink to &quot;animation 的子属性有：&quot;">​</a></h2><h3 id="animation-delay" tabindex="-1">animation-delay <a class="header-anchor" href="#animation-delay" aria-label="Permalink to &quot;animation-delay&quot;">​</a></h3><p>设置延时，即从元素加载完成之后到动画序列开始执行的这段时间。</p><h3 id="animation-direction" tabindex="-1">animation-direction <a class="header-anchor" href="#animation-direction" aria-label="Permalink to &quot;animation-direction&quot;">​</a></h3><p>设置动画在每次运行完后是反向运行还是重新回到开始位置重复运行。</p><h3 id="animation-duration" tabindex="-1">animation-duration <a class="header-anchor" href="#animation-duration" aria-label="Permalink to &quot;animation-duration&quot;">​</a></h3><p>设置动画一个周期的时长。</p><h3 id="animation-iteration-count" tabindex="-1">animation-iteration-count <a class="header-anchor" href="#animation-iteration-count" aria-label="Permalink to &quot;animation-iteration-count&quot;">​</a></h3><p>设置动画重复次数，可以指定 infinite 无限次重复动画</p><h3 id="animation-name" tabindex="-1">animation-name <a class="header-anchor" href="#animation-name" aria-label="Permalink to &quot;animation-name&quot;">​</a></h3><p>指定由@keyframes 描述的关键帧名称。</p><h3 id="animation-play-state" tabindex="-1">animation-play-state <a class="header-anchor" href="#animation-play-state" aria-label="Permalink to &quot;animation-play-state&quot;">​</a></h3><p>允许暂停和恢复动画。</p><h3 id="animation-timing-function" tabindex="-1">animation-timing-function <a class="header-anchor" href="#animation-timing-function" aria-label="Permalink to &quot;animation-timing-function&quot;">​</a></h3><p>设置动画速度，即通过建立加速度曲线，设置动画在关键帧之间是如何变化。</p><h3 id="animation-fill-mode" tabindex="-1">animation-fill-mode <a class="header-anchor" href="#animation-fill-mode" aria-label="Permalink to &quot;animation-fill-mode&quot;">​</a></h3><p>指定动画执行前后如何为目标元素应用样式。</p>',20),r=[o];function m(l,d,h,c,s,u){return n(),i("div",null,r)}const _=a(e,[["render",m]]);export{f as __pageData,_ as default};
