import{_ as t,o as s,c as a,S as l}from"./chunks/framework.2524ba1c.js";const D=JSON.parse('{"title":"菜单","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"前端/React/内置组件/Fragment/index.md","filePath":"前端/React/内置组件/Fragment/index.md"}'),n={name:"前端/React/内置组件/Fragment/index.md"},e=l(`<h1 id="菜单" tabindex="-1">菜单 <a class="header-anchor" href="#菜单" aria-label="Permalink to &quot;菜单&quot;">​</a></h1><p>&lt;Fragment&gt; 通常使用 &lt;&gt;...&lt;/&gt; 代替，它们都允许你在不添加额外节点的情况下将子元素组合。</p><h2 id="用法" tabindex="-1">用法 <a class="header-anchor" href="#用法" aria-label="Permalink to &quot;用法&quot;">​</a></h2><div class="language-jsx"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Post</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#F07178;">    </span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#F07178;"> (</span></span>
<span class="line"><span style="color:#F07178;">        </span><span style="color:#89DDFF;">&lt;&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">PostTitle</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">            </span><span style="color:#89DDFF;">&lt;</span><span style="color:#FFCB6B;">PostBody</span><span style="color:#89DDFF;"> /&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;/&gt;</span></span>
<span class="line"><span style="color:#F07178;">    )</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">注意事项</p><p>如果你要传递 key 给一个 &lt;Fragment&gt;，你不能使用 &lt;&gt;...&lt;/&gt;，你必须从 &#39;react&#39; 中导入 Fragment 且表示为&lt;Fragment key={yourKey}&gt;...&lt;/Fragment&gt;。</p><p>当你要从 &lt;&gt; &lt;Child /&gt;&lt;/&gt; 转换为 [&lt;Child /&gt;] 或 &lt;&gt;&lt;Child /&gt;&lt;/&gt; 转换为 &lt;Child /&gt;，React 并不会重置 state。这个规则只在一层深度的情况下生效，如果从 &lt;&gt;&lt;&gt;&lt;Child /&gt;&lt;/&gt;&lt;/&gt; 转换为 &lt;Child /&gt; 则会重置 state。</p></div>`,5),o=[e];function p(c,r,i,F,g,d){return s(),a("div",null,o)}const _=t(n,[["render",p]]);export{D as __pageData,_ as default};
