import{_ as a,o as e,c as s,S as l}from"./chunks/framework.2524ba1c.js";const u=JSON.parse('{"title":"SVG","description":"","frontmatter":{},"headers":[],"relativePath":"图形编程技术/Svg/index.md","filePath":"图形编程技术/Svg/index.md"}'),r={name:"图形编程技术/Svg/index.md"},t=l(`<h1 id="svg" tabindex="-1">SVG <a class="header-anchor" href="#svg" aria-label="Permalink to &quot;SVG&quot;">​</a></h1><p>SVG 是一种 XML 语言，类似 XHTML，可以用来绘制可缩放的矢量图形。</p><h2 id="svg-的优点" tabindex="-1">SVG 的优点 <a class="header-anchor" href="#svg-的优点" aria-label="Permalink to &quot;SVG 的优点&quot;">​</a></h2><p>与在浏览器环境中使用的传统位图图形（例如 JPEG、GIF 和 PNG）相比，SVG 具有一些优势，原因如下：</p><ul><li>比位图小得多，因此下载时间更快。</li><li>可以缩放图形以适应不同的显示设备，而不会出现模糊</li><li>客户端渲染快</li><li>用户可以与图形交互并更改图形</li></ul><h2 id="声明-svg" tabindex="-1">声明 svg <a class="header-anchor" href="#声明-svg" aria-label="Permalink to &quot;声明 svg&quot;">​</a></h2><p>作为 XML 的一种方言，SVG 必须正确的配置命名空间（在 xmlns 属性中绑定）。请阅读命名空间速成页面获取更多信息。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">svg</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">xmlns</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">http://www.w3.org/2000/svg</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;!-- more tags here --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">svg</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div><h2 id="用途" tabindex="-1">用途 <a class="header-anchor" href="#用途" aria-label="Permalink to &quot;用途&quot;">​</a></h2><ul><li>网页图形：通常用于绘制图形、图标和其他矢量图形元素。</li><li>数据可视化：SVG 可用于创建交互式数据可视化图表，如折线图、柱状图、饼图和地图。</li><li>动画：SVG 支持动画功能，允许你创建图形的过渡和动态效果。</li><li>印刷和出版：由于 SVG 是矢量图形格式，因此它适用于印刷和出版领域。</li><li>交互性：SVG 可以与 JavaScript 和 CSS 结合使用，以实现交互性。这使得创建交互式用户界面元素和动态图形成为可能。</li></ul><h1 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h1><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial" target="_blank" rel="noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/SVG/Tutorial</a></p><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/SVG/Namespaces_Crash_Course" target="_blank" rel="noreferrer">https://developer.mozilla.org/zh-CN/docs/Web/SVG/Namespaces_Crash_Course</a></p><p><a href="https://www.w3.org/Graphics/SVG/IG/resources/svgprimer.html" target="_blank" rel="noreferrer">https://www.w3.org/Graphics/SVG/IG/resources/svgprimer.html</a></p>`,14),o=[t];function n(p,i,c,h,d,g){return e(),s("div",null,o)}const S=a(r,[["render",n]]);export{u as __pageData,S as default};
