import{_ as a,c as t,o as p,a6 as h}from"./chunks/framework.DwCPU-X7.js";const _=JSON.parse('{"title":"Math","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"前端/JavaScript/教程/内置对象/数字和日期对象/Math/index.md","filePath":"前端/JavaScript/教程/内置对象/数字和日期对象/Math/index.md"}'),e={name:"前端/JavaScript/教程/内置对象/数字和日期对象/Math/index.md"},o=h('<h1 id="math" tabindex="-1">Math <a class="header-anchor" href="#math" aria-label="Permalink to &quot;Math&quot;">​</a></h1><p>Math 是一个内置对象，它拥有一些数学常数属性和数学函数方法。Math 不是一个函数对象。</p><p>Math 用于 Number 类型。它不支持 BigInt。</p><p>与其他全局对象不同的是，Math 不是一个构造器。Math 的所有属性与方法都是静态的。引用圆周率的写法是 Math.PI，调用正余弦函数的写法是 Math.sin(x)，x 是要传入的参数。Math 的常量是使用 JavaScript 中的全精度浮点数来定义的。</p><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><p>Math.E 欧拉常数，也是自然对数的底数，约等于 2.718。</p><p>Math.LN2 2 的自然对数，约等于 0.693。</p><p>Math.LN10 10 的自然对数，约等于 2.303。</p><p>Math.LOG2E 以 2 为底的 E 的对数，约等于 1.443。</p><p>Math.LOG10E 以 10 为底的 E 的对数，约等于 0.434。</p><p>Math.PI 圆周率，一个圆的周长和直径之比，约等于 3.14159。</p><p>Math.SQRT1_2 二分之一 ½ 的平方根，同时也是 2 的平方根的倒数 1 2 ，约等于 0.707。</p><p>Math.SQRT2 2 的平方根，约等于 1.414。</p><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">备注</p><p>需要注意的是，三角函数 sin()、cos()、tan()、asin()、acos()、atan() 和 atan2() 返回的值是弧度而非角度。若要转换，弧度除以 (Math.PI / 180) 即可转换为角度，同理，角度乘以这个数则能转换为弧度。</p></div><p>Math.abs(x) 返回一个数的绝对值。</p><p>Math.acos(x) 返回一个数的反余弦值。</p><p>Math.acosh(x) 返回一个数的反双曲余弦值。</p><p>Math.asin(x) 返回一个数的反正弦值。</p><p>Math.asinh(x) 返回一个数的反双曲正弦值。</p><p>Math.atan(x) 返回一个数的反正切值。</p><p>Math.atanh(x) 返回一个数的反双曲正切值。</p><p>Math.atan2(y, x) 返回 y/x 的反正切值。</p><p>Math.cbrt(x) 返回一个数的立方根。</p><p>Math.ceil(x) 返回大于一个数的最小整数，即一个数向上取整后的值。</p><p>Math.clz32(x) 返回一个 32 位整数的前导零的数量。</p><p>Math.cos(x) 返回一个数的余弦值。</p><p>Math.cosh(x) 返回一个数的双曲余弦值。</p><p>Math.exp(x) 返回欧拉常数的参数次方，E^x，其中 x 为参数，E 是欧拉常数（2.718...，自然对数的底数）。</p><p>Math.expm1(x) 返回 exp(x) - 1 的值。</p><p>Math.floor(x) 返回小于一个数的最大整数，即一个数向下取整后的值。</p><p>Math.fround(x) 返回最接近一个数的单精度浮点型表示。</p><p>Math.hypot([x[, y[, …]]]) 返回其所有参数平方和的平方根。</p><p>Math.imul(x, y) 返回 32 位整数乘法的结果。</p><p>Math.log(x) 返回一个数的自然对数（㏒e，即 ㏑）。</p><p>Math.log1p(x) 返回一个数加 1 的和的自然对数（㏒e，即 ㏑）。</p><p>Math.log10(x) 返回一个数以 10 为底数的对数。</p><p>Math.log2(x) 返回一个数以 2 为底数的对数。</p><p>Math.max([x[, y[, …]]]) 返回零到多个数值中最大值。</p><p>Math.min([x[, y[, …]]]) 返回零到多个数值中最小值。</p><p>Math.pow(x, y) 返回一个数的 y 次幂。</p><p>Math.random() 返回一个 0 到 1 之间的伪随机数。</p><p>Math.round(x) 返回四舍五入后的整数。</p><p>Math.sign(x) 返回一个数的符号，得知一个数是正数、负数还是 0。</p><p>Math.sin(x) 返回一个数的正弦值。</p><p>Math.sinh(x) 返回一个数的双曲正弦值。</p><p>Math.sqrt(x) 返回一个数的平方根。</p><p>Math.tan(x) 返回一个数的正切值。</p><p>Math.tanh(x) 返回一个数的双曲正切值。</p><p>Math.toSource() 返回字符串 &quot;Math&quot;。</p><p>Math.trunc(x) 返回一个数的整数部分，直接去除其小数点及之后的部分。</p>',51),M=[o];function n(x,i,s,r,c,l){return p(),t("div",null,M)}const m=a(e,[["render",n]]);export{_ as __pageData,m as default};
