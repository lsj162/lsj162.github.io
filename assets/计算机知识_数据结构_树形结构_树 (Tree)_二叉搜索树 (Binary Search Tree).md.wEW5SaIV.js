import{_ as e,c as a,o as r,a5 as t}from"./chunks/framework.DALfHeHd.js";const S=JSON.parse('{"title":"二叉搜索树 (Binary Search Tree)","description":"","frontmatter":{},"headers":[],"relativePath":"计算机知识/数据结构/树形结构/树 (Tree)/二叉搜索树 (Binary Search Tree).md","filePath":"计算机知识/数据结构/树形结构/树 (Tree)/二叉搜索树 (Binary Search Tree).md","lastUpdated":1717313630000}'),_={name:"计算机知识/数据结构/树形结构/树 (Tree)/二叉搜索树 (Binary Search Tree).md"},c=t('<h1 id="二叉搜索树-binary-search-tree" tabindex="-1">二叉搜索树 (Binary Search Tree) <a class="header-anchor" href="#二叉搜索树-binary-search-tree" aria-label="Permalink to &quot;二叉搜索树 (Binary Search Tree)&quot;">​</a></h1><p>满足以下性质：</p><ol><li>每个节点的<code>左子树</code>只包含小于当前节点的键值的节点。</li><li>每个节点的<code>右子树</code>只包含大于当前节点的键值的节点。</li><li><code>左右子树</code>也必须分别为二叉搜索树。</li><li>没有键值相等的节点。</li></ol>',3),i=[c];function o(n,s,d,l,h,T){return r(),a("div",null,i)}const m=e(_,[["render",o]]);export{S as __pageData,m as default};
