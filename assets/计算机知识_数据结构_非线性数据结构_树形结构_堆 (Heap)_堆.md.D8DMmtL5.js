import{_ as a,c as e,o as t,a6 as r}from"./chunks/framework.DwCPU-X7.js";const f=JSON.parse('{"title":"定义","description":"","frontmatter":{},"headers":[],"relativePath":"计算机知识/数据结构/非线性数据结构/树形结构/堆 (Heap)/堆.md","filePath":"计算机知识/数据结构/非线性数据结构/树形结构/堆 (Heap)/堆.md","lastUpdated":1712486972000}'),o={name:"计算机知识/数据结构/非线性数据结构/树形结构/堆 (Heap)/堆.md"},s=r('<h1 id="定义" tabindex="-1">定义 <a class="header-anchor" href="#定义" aria-label="Permalink to &quot;定义&quot;">​</a></h1><ol><li>完全二叉树结构： 堆通常是一棵完全二叉树，这意味着除了最底层，其他层的节点都被填满，并且最底层的节点都尽可能地靠左排列。</li><li>对于堆中的任意节点，其值都不大于（或不小于）其子节点的值。</li></ol><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h2><p><a href="https://www.runoob.com/data-structures/heap-storage.html" target="_blank" rel="noreferrer">堆的基本存储</a></p>',4),_=[s];function l(n,c,i,d,h,p){return t(),e("div",null,_)}const u=a(o,[["render",l]]);export{f as __pageData,u as default};
