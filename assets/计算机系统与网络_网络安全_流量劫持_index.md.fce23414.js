import{_ as a,o as e,c as t,S as o}from"./chunks/framework.2524ba1c.js";const P=JSON.parse('{"title":"流量劫持","description":"","frontmatter":{},"headers":[],"relativePath":"计算机系统与网络/网络安全/流量劫持/index.md","filePath":"计算机系统与网络/网络安全/流量劫持/index.md"}'),r={name:"计算机系统与网络/网络安全/流量劫持/index.md"},i=o('<h1 id="流量劫持" tabindex="-1">流量劫持 <a class="header-anchor" href="#流量劫持" aria-label="Permalink to &quot;流量劫持&quot;">​</a></h1><p>流量劫持的方式主要分为两种：</p><ul><li>域名解析劫持（DNS 劫持）</li><li>数据劫持（HTTP 劫持）</li></ul><h2 id="dns-劫持" tabindex="-1">DNS 劫持 <a class="header-anchor" href="#dns-劫持" aria-label="Permalink to &quot;DNS 劫持&quot;">​</a></h2><p>域名解析劫持（DNS 劫持）是针对传统 DNS 解析的常见劫持方式。用户在浏览器输入网址，即发出一个 HTTP 请求，首先需要进行域名解析，得到业务服务器的 IP 地址。使用传统 DNS 解析时，会通过当地网络运营商提供的本地域名服务器解析得到结果。在请求本地域名服务器解析域名时会出现问题，目标域名被恶意地解析到其他 IP 地址，造成用户无法正常使用服务。</p><h2 id="http-劫持" tabindex="-1">HTTP 劫持 <a class="header-anchor" href="#http-劫持" aria-label="Permalink to &quot;HTTP 劫持&quot;">​</a></h2><p>HTTP 协议属于明文协议，中间链路上的任意设备，都可以篡改内容，导致流量劫持。</p>',7),n=[i];function s(d,l,_,c,h,p){return e(),t("div",null,n)}const u=a(r,[["render",s]]);export{P as __pageData,u as default};
