import{_ as a,c as s,o as e,a6 as i}from"./chunks/framework.DwCPU-X7.js";const y=JSON.parse('{"title":"Symbol","description":"","frontmatter":{},"headers":[],"relativePath":"前端/JavaScript/官方文档基础教程/EcmaScript6/Sysbol.md","filePath":"前端/JavaScript/官方文档基础教程/EcmaScript6/Sysbol.md","lastUpdated":1715524989000}'),t={name:"前端/JavaScript/官方文档基础教程/EcmaScript6/Sysbol.md"},l=i(`<h1 id="symbol" tabindex="-1">Symbol <a class="header-anchor" href="#symbol" aria-label="Permalink to &quot;Symbol&quot;">​</a></h1><h2 id="定义" tabindex="-1">定义 <a class="header-anchor" href="#定义" aria-label="Permalink to &quot;定义&quot;">​</a></h2><p>ES6 中的 Symbol 是一种新的原始数据类型（symbol），它是唯一的、不可改变的数据类型，用于创建唯一的标识符。</p><h2 id="浏览器如何查看-symbol-属性" tabindex="-1">浏览器如何查看 Symbol 属性？ <a class="header-anchor" href="#浏览器如何查看-symbol-属性" aria-label="Permalink to &quot;浏览器如何查看 Symbol 属性？&quot;">​</a></h2><p>可以使用 Reflect.ownKeys 方法。这个方法返回一个数组，包含了指定对象自身的所有属性的属性名。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> symbols</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Reflect.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">ownKeys</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(Symbol);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(symbols);</span></span></code></pre></div><h2 id="用法" tabindex="-1">用法： <a class="header-anchor" href="#用法" aria-label="Permalink to &quot;用法：&quot;">​</a></h2><p><a href="https://es6.ruanyifeng.com/#docs/symbol" target="_blank" rel="noreferrer">https://es6.ruanyifeng.com/#docs/symbol</a></p>`,8),o=[l];function n(r,h,p,c,d,k){return e(),s("div",null,o)}const b=a(t,[["render",n]]);export{y as __pageData,b as default};
