import{_ as a,c as i,o as s,a5 as t}from"./chunks/framework.AYenO5Lm.js";const v=JSON.parse('{"title":"Canvas","description":"","frontmatter":{},"headers":[],"relativePath":"图形编程技术/Canvas/index.md","filePath":"图形编程技术/Canvas/index.md"}'),l={name:"图形编程技术/Canvas/index.md"},e=t('<h1 id="canvas" tabindex="-1">Canvas <a class="header-anchor" href="#canvas" aria-label="Permalink to &quot;Canvas&quot;">​</a></h1><p>HTML 的 canvas 元素为脚本提供了依赖于分辨率的位图画布，可以使用 APIs （比如 Canvas 2D 或 WebGL）来绘制图形。可用于动态渲染图形、游戏图形或其他视觉图像。</p><h2 id="用途" tabindex="-1">用途 <a class="header-anchor" href="#用途" aria-label="Permalink to &quot;用途&quot;">​</a></h2><ul><li>游戏开发：Canvas 是游戏开发的流行选择之一，因为它提供了绘制图形、处理用户输入和管理游戏循环的灵活性。开发者可以使用 Canvas 创建 2D 游戏、小游戏和交互式图形应用程序。</li><li>数据可视化：Canvas 可以用于创建交互式数据可视化，包括图表、图形和实时数据展示。</li><li>图像处理：Canvas 可以用于图像处理，如图片编辑和滤镜应用。</li><li>动画：Canvas 可用于创建动画，包括帧动画、物理模拟和粒子效果。</li><li>交互式用户界面元素：Canvas 可以用于创建自定义的交互式用户界面元素，如拖放元素、拖动滑块、图形按钮等。</li></ul><h2 id="基本用法" tabindex="-1">基本用法 <a class="header-anchor" href="#基本用法" aria-label="Permalink to &quot;基本用法&quot;">​</a></h2><p>id 属性并不是&lt;canvas&gt;元素所特有的，&lt;canvas&gt; 标签只有两个属性 width 和 height。这些都是可选的，当没有设置宽度和高度的时候，canvas 会初始化宽度为 300 像素和高度为 150 像素。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">canvas</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;tutorial&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> width</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;300&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> height</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;150&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">canvas</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="目录" tabindex="-1">目录 <a class="header-anchor" href="#目录" aria-label="Permalink to &quot;目录&quot;">​</a></h2><ul><li>入门</li><li>基本用法</li><li>绘制图形</li><li>使用样式与颜色</li><li>绘制文本</li><li>使用图像</li><li>变形</li><li>合成和剪辑</li><li>基本动画</li><li>高级动画</li><li>像素处理</li><li>Canvas 性能优化</li></ul><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h2><p><a href="https://www.html5canvastutorials.com/" target="_blank" rel="noreferrer">https://www.html5canvastutorials.com/</a></p><h2 id="书籍" tabindex="-1">书籍 <a class="header-anchor" href="#书籍" aria-label="Permalink to &quot;书籍&quot;">​</a></h2>',12),n=[e];function h(r,o,d,p,k,c){return s(),i("div",null,n)}const g=a(l,[["render",h]]);export{v as __pageData,g as default};
