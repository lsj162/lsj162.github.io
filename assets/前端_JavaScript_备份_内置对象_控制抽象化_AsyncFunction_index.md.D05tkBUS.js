import{_ as s,c as n,o as i,a5 as t}from"./chunks/framework.AYenO5Lm.js";const _=JSON.parse('{"title":"AsyncFunction","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"前端/JavaScript/备份/内置对象/控制抽象化/AsyncFunction/index.md","filePath":"前端/JavaScript/备份/内置对象/控制抽象化/AsyncFunction/index.md"}'),a={name:"前端/JavaScript/备份/内置对象/控制抽象化/AsyncFunction/index.md"},e=t('<h1 id="asyncfunction" tabindex="-1">AsyncFunction <a class="header-anchor" href="#asyncfunction" aria-label="Permalink to &quot;AsyncFunction&quot;">​</a></h1><p>AsyncFunction 对象为异步函数提供方法。在 JavaScript 中，每个异步函数实际上都是一个 AsyncFunction 对象。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> AsyncFunction</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> async</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> function</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> () {}.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">constructor</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span></code></pre></div><p>AsyncFunction 是 Function 的子类型。</p>',4),c=[e];function o(p,h,r,l,d,k){return i(),n("div",null,c)}const y=s(a,[["render",o]]);export{_ as __pageData,y as default};
