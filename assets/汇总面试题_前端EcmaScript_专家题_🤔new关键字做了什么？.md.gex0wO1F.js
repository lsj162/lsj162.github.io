import{_ as s,c as i,o as a,a5 as n}from"./chunks/framework.-E9IboRH.js";const g=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"汇总面试题/前端EcmaScript/专家题/🤔new关键字做了什么？.md","filePath":"汇总面试题/前端EcmaScript/专家题/🤔new关键字做了什么？.md"}'),t={name:"汇总面试题/前端EcmaScript/专家题/🤔new关键字做了什么？.md"},p=n(`<p>创建一个新的空对象。 将该<code>空对象的原型</code>指向构造函数的原型（即 Constructor.prototype）。 执行构造函数，并将新创建的对象绑定到 this 上，以便在构造函数中可以对其进行属性和方法的设置。 如果构造函数没有显式返回一个对象，则返回这个新创建的对象；如果构造函数显式返回了一个对象，则返回该对象。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Person</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">age</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> name;</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.age </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> age;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用 new 关键字创建对象</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> person1</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> new</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> Person</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Alice&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">30</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(person1.name); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出: Alice</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">console.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(person1.age); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 输出: 30</span></span></code></pre></div><p>JavaScript 首先创建一个空对象，并将构造函数 Person 的作用域绑定到这个空对象上。然后执行构造函数中的代码，将 name 和 age 属性设置为指定的值。最后，返回这个新创建的对象，赋值给 person1 变量。</p>`,3),h=[p];function e(l,k,r,E,d,c){return a(),i("div",null,h)}const y=s(t,[["render",e]]);export{g as __pageData,y as default};
