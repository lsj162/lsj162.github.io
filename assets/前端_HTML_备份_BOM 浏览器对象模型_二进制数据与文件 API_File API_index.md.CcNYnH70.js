import{_ as e,c as a,o as i,a6 as t}from"./chunks/framework.DwCPU-X7.js";const u=JSON.parse('{"title":"File","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"前端/HTML/备份/BOM 浏览器对象模型/二进制数据与文件 API/File API/index.md","filePath":"前端/HTML/备份/BOM 浏览器对象模型/二进制数据与文件 API/File API/index.md","lastUpdated":1711585217000}'),l={name:"前端/HTML/备份/BOM 浏览器对象模型/二进制数据与文件 API/File API/index.md"},o=t('<h1 id="file" tabindex="-1">File <a class="header-anchor" href="#file" aria-label="Permalink to &quot;File&quot;">​</a></h1><p>文件（File）接口提供有关文件的信息，并允许网页中的 JavaScript 访问其内容。</p><h2 id="构造函数" tabindex="-1">构造函数 <a class="header-anchor" href="#构造函数" aria-label="Permalink to &quot;构造函数&quot;">​</a></h2><h3 id="file-1" tabindex="-1">File() <a class="header-anchor" href="#file-1" aria-label="Permalink to &quot;File()&quot;">​</a></h3><p>返回一个新构建的文件对象（File）。</p><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><p>File 接口也继承了 Blob 接口的属性：</p><h3 id="file-lastmodified-只读" tabindex="-1">File.lastModified 只读 <a class="header-anchor" href="#file-lastmodified-只读" aria-label="Permalink to &quot;File.lastModified 只读&quot;">​</a></h3><p>返回当前 File 对象所引用文件最后修改时间，自 UNIX 时间起始值（1970 年 1 月 1 日 00:00:00 UTC）以来的毫秒数。</p><h3 id="file-lastmodifieddate-只读-已弃用" tabindex="-1">File.lastModifiedDate 只读 已弃用 <a class="header-anchor" href="#file-lastmodifieddate-只读-已弃用" aria-label="Permalink to &quot;File.lastModifiedDate 只读 已弃用&quot;">​</a></h3><p>返回当前 File 对象所引用文件最后修改时间的 Date 对象。</p><h3 id="file-name-只读" tabindex="-1">File.name 只读 <a class="header-anchor" href="#file-name-只读" aria-label="Permalink to &quot;File.name 只读&quot;">​</a></h3><p>返回当前 File 对象所引用文件的名字。</p><h3 id="file-size-只读" tabindex="-1">File.size 只读 <a class="header-anchor" href="#file-size-只读" aria-label="Permalink to &quot;File.size 只读&quot;">​</a></h3><p>返回文件的大小。</p><h3 id="file-webkitrelativepath-只读-非标准" tabindex="-1">File.webkitRelativePath 只读 非标准 <a class="header-anchor" href="#file-webkitrelativepath-只读-非标准" aria-label="Permalink to &quot;File.webkitRelativePath 只读 非标准&quot;">​</a></h3><p>返回 File 相关的 path 或 URL。</p><h3 id="file-type-只读" tabindex="-1">File.type 只读 <a class="header-anchor" href="#file-type-只读" aria-label="Permalink to &quot;File.type 只读&quot;">​</a></h3><p>返回文件的 多用途互联网邮件扩展类型（MIME Type）</p><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><p>File 接口没有定义任何方法，但是它从 Blob 接口继承了以下方法：</p><h3 id="blob-slice-start-end-contenttype" tabindex="-1">Blob.slice([start[, end[, contentType]]]) <a class="header-anchor" href="#blob-slice-start-end-contenttype" aria-label="Permalink to &quot;Blob.slice([start[, end[, contentType]]])&quot;">​</a></h3><p>返回一个新的 Blob 对象，它包含有源 Blob 对象中指定范围内的数据。</p>',23),r=[o];function d(n,h,s,c,p,f){return i(),a("div",null,r)}const m=e(l,[["render",d]]);export{u as __pageData,m as default};
