import{_ as t,c as a,o,m as e,a as n}from"./chunks/framework.-E9IboRH.js";const C=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"汇总面试题/网络HTTP/3. 网络安全/2. 跨站请求伪造（CSRF）？🔥.md","filePath":"汇总面试题/网络HTTP/3. 网络安全/2. 跨站请求伪造（CSRF）？🔥.md"}'),l={name:"汇总面试题/网络HTTP/3. 网络安全/2. 跨站请求伪造（CSRF）？🔥.md"},_=e("h3",{id:"跨站请求伪造-csrf",tabindex:"-1"},[n("跨站请求伪造（CSRF）： "),e("a",{class:"header-anchor",href:"#跨站请求伪造-csrf","aria-label":'Permalink to "跨站请求伪造（CSRF）："'},"​")],-1),s=e("ol",null,[e("li",null,[e("p",null,"定义： CSRF 是一种攻击手法，攻击者通过利用用户在其他站点已经登录的身份，伪造一个请求来执行一些未经用户授权的操作。")]),e("li",null,[e("p",null,"攻击方式： 攻击者通常通过诱使用户访问包含恶意请求的页面，或者通过其他手段（如图片、Flash 等）加载恶意请求。由于用户在其他站点已经登录，浏览器会自动携带相应的认证信息，导致对目标站点的未经授权的操作。")]),e("li",null,[e("p",null,"防范措施： 防范 CSRF 的措施包括使用 Anti-CSRF Token，该 Token 在用户登录时生成，并在每个请求中验证。这样，即使攻击者能够伪造请求，由于缺少正确的 Token，请求也会被拒绝。另外，设置 SameSite 属性的 Cookie，限制第三方站点对 Cookie 的访问。")])],-1),r=e("p",null,"同源检测：在网站的后端对请求进行来源验证，确保请求来自合法的源站点。可以通过检查请求的来源域名、Referer 头部等方式进行验证。",-1),c=[_,s,r];function i(d,p,h,u,f,m){return o(),a("div",null,c)}const F=t(l,[["render",i]]);export{C as __pageData,F as default};
