import{_ as t,c as l,o as a,a5 as e}from"./chunks/framework.-E9IboRH.js";const d=JSON.parse('{"title":"什么是 https？","description":"","frontmatter":{},"headers":[],"relativePath":"汇总面试题/网络HTTP/2. HTTP协议/什么是https？.md","filePath":"汇总面试题/网络HTTP/2. HTTP协议/什么是https？.md"}'),i={name:"汇总面试题/网络HTTP/2. HTTP协议/什么是https？.md"},o=e('<h1 id="什么是-https" tabindex="-1">什么是 https？ <a class="header-anchor" href="#什么是-https" aria-label="Permalink to &quot;什么是 https？&quot;">​</a></h1><h2 id="概述" tabindex="-1">概述 <a class="header-anchor" href="#概述" aria-label="Permalink to &quot;概述&quot;">​</a></h2><p>HTTPS 是 Hypertext Transfer Protocol Secure 的缩写，是 HTTP 的安全版本，通过使用 TLS/SSL 协议对数据进行加密和认证，保护网络通信的安全性。</p><p>有效防止数据被窃取和篡改，保护用户的隐私和数据安全。</p><h2 id="记录" tabindex="-1">记录 <a class="header-anchor" href="#记录" aria-label="Permalink to &quot;记录&quot;">​</a></h2><ul><li><p>加密（Encryption）：HTTPS 使用 TLS/SSL 协议对数据进行加密，保护数据在传输过程中的机密性。TLS/SSL 使用公钥加密和私钥解密的方式，客户端和服务器之间通过交换公钥来协商会话密钥，从而实现对数据的加密和解密。</p><ol><li>握手阶段：</li></ol><ul><li>客户端向服务器发起请求，请求建立安全连接。</li><li>服务器返回自己的 SSL 证书，包括公钥。</li><li>客户端验证服务器的证书，并生成一个随机的对称密钥（Session Key）。</li></ul><ol start="2"><li>密钥交换阶段：</li></ol><ul><li>客户端使用服务器的公钥加密生成的对称密钥，发送给服务器。</li><li>服务器使用自己的私钥解密得到对称密钥。</li></ul><ol start="3"><li>通信阶段：</li></ol><ul><li>双方使用协商好的对称密钥进行加密和解密通信。</li><li>这个对称密钥只在当前会话中有效，提供了数据的机密性和完整性。</li></ul></li><li><p>身份认证（Authentication）：HTTPS 通过数字证书对通信双方的身份进行认证，确保通信的双方是合法的。服务器需要提供数字证书，数字证书中包含了服务器的公钥和其他信息，由可信的第三方机构颁发并签名。客户端在连接服务器时会验证服务器提供的数字证书的合法性，确保连接的安全性。</p></li></ul><p>非对称加密算法（如 RSA）</p><p>对称加密算法（如 AES）</p>',8),r=[o];function s(p,n,h,_,T,c){return a(),l("div",null,r)}const u=t(i,[["render",s]]);export{d as __pageData,u as default};
