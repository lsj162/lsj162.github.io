import{_ as e,c as a,o as t,a5 as r}from"./chunks/framework.182u50ov.js";const V=JSON.parse('{"title":"Vue","description":"","frontmatter":{},"headers":[],"relativePath":"前端/Vue/index.md","filePath":"前端/Vue/index.md"}'),s={name:"前端/Vue/index.md"},o=r('<h1 id="vue" tabindex="-1">Vue <a class="header-anchor" href="#vue" aria-label="Permalink to &quot;Vue&quot;">​</a></h1><p>Vue.js（通常简称为 Vue）是一款用于构建用户界面的 JavaScript 框架。</p><h2 id="vue-的主要特点" tabindex="-1">Vue 的主要特点： <a class="header-anchor" href="#vue-的主要特点" aria-label="Permalink to &quot;Vue 的主要特点：&quot;">​</a></h2><p>响应式数据绑定：使得数据和 DOM 之间的关系变得简单而直观。</p><p>组件化开发： Vue 采用组件化的开发模式，将用户界面拆分成独立的、可复用的组件。</p><p>指令系统： Vue 引入了指令系统，允许开发者在模板中使用一些特殊的标记，用于实现特定的 DOM 操作或响应用户交互。</p><p>模板语法： Vue.js 使用模板语法，类似 HTML，用于声明 UI。</p><p>组件生命周期： Vue.js 组件具有生命周期钩子，允许开发者在不同阶段执行特定的操作，如组件创建、更新、销毁等。</p><p>虚拟 DOM（Virtual DOM）： Vue.js 使用虚拟 DOM 来提高性能。</p><p>服务器端渲染（SSR）： Vue.js 支持服务器端渲染，这有助于提高首次加载性能和搜索引擎优化。</p><h2 id="方案" tabindex="-1">方案 <a class="header-anchor" href="#方案" aria-label="Permalink to &quot;方案&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">技术方案</p><p>常见的技术方案，由 Vite（或 Webpack）， Vue，Vue Router，Vuex（或 Pinia），Scss（或 Less），axios 组合开发。</p><p>服务端渲染：</p><p>一般采用 Nuxt.js 应用框架。</p></div><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h2><p><a href="https://cn.vuejs.org/guide/introduction.html" target="_blank" rel="noreferrer">官网：- 开发文档：https://cn.vuejs.org/</a></p>',14),i=[o];function u(p,n,c,l,d,h){return t(),a("div",null,i)}const m=e(s,[["render",u]]);export{V as __pageData,m as default};
