import{_ as e,c as a,o as t,a6 as r}from"./chunks/framework.DwCPU-X7.js";const b=JSON.parse('{"title":"XMLHttpRequest","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"前端/HTML/备份/BOM 浏览器对象模型/数据通信 API/XMLHttpRequest API/index.md","filePath":"前端/HTML/备份/BOM 浏览器对象模型/数据通信 API/XMLHttpRequest API/index.md"}'),o={name:"前端/HTML/备份/BOM 浏览器对象模型/数据通信 API/XMLHttpRequest API/index.md"},s=r('<h1 id="xmlhttprequest" tabindex="-1">XMLHttpRequest <a class="header-anchor" href="#xmlhttprequest" aria-label="Permalink to &quot;XMLHttpRequest&quot;">​</a></h1><p>XMLHttpRequest（XHR）对象用于与服务器交互。通过 XMLHttpRequest 可以在不刷新页面的情况下请求特定 URL，获取数据。这允许网页在不影响用户操作的情况下，更新页面的局部内容。XMLHttpRequest 在 AJAX 编程中被大量使用。</p><h2 id="常见的属性" tabindex="-1">常见的属性 <a class="header-anchor" href="#常见的属性" aria-label="Permalink to &quot;常见的属性&quot;">​</a></h2><h3 id="xmlhttprequest-status-只读" tabindex="-1">XMLHttpRequest.status 只读 <a class="header-anchor" href="#xmlhttprequest-status-只读" aria-label="Permalink to &quot;XMLHttpRequest.status 只读&quot;">​</a></h3><p>返回一个无符号短整型（unsigned short）数字，代表请求的响应状态。</p><h2 id="事件" tabindex="-1">事件 <a class="header-anchor" href="#事件" aria-label="Permalink to &quot;事件&quot;">​</a></h2><h3 id="abort" tabindex="-1">abort <a class="header-anchor" href="#abort" aria-label="Permalink to &quot;abort&quot;">​</a></h3><p>当 request 被停止时触发，例如当程序调用 XMLHttpRequest.abort() 时。 也可以使用 onabort 属性。</p><h3 id="error" tabindex="-1">error <a class="header-anchor" href="#error" aria-label="Permalink to &quot;error&quot;">​</a></h3><p>当 request 遭遇错误时触发。 也可以使用 onerror 属性</p><h3 id="load" tabindex="-1">load <a class="header-anchor" href="#load" aria-label="Permalink to &quot;load&quot;">​</a></h3><p>XMLHttpRequest 请求成功完成时触发。 也可以使用 onload 属性。</p><h3 id="loadend" tabindex="-1">loadend <a class="header-anchor" href="#loadend" aria-label="Permalink to &quot;loadend&quot;">​</a></h3><p>当请求结束时触发，无论请求成功 ( load) 还是失败 (abort 或 error)。 也可以使用 onloadend 属性。</p><h3 id="loadstart" tabindex="-1">loadstart <a class="header-anchor" href="#loadstart" aria-label="Permalink to &quot;loadstart&quot;">​</a></h3><p>接收到响应数据时触发。 也可以使用 onloadstart 属性。</p><h3 id="progress" tabindex="-1">progress <a class="header-anchor" href="#progress" aria-label="Permalink to &quot;progress&quot;">​</a></h3><p>当请求接收到更多数据时，周期性地触发。 也可以使用 onprogress 属性。</p><h3 id="timeout" tabindex="-1">timeout <a class="header-anchor" href="#timeout" aria-label="Permalink to &quot;timeout&quot;">​</a></h3><p>在预设时间内没有接收到响应时触发。 也可以使用 ontimeout 属性。</p><h2 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h2><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest" target="_blank" rel="noreferrer">MDN 官网：https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest</a></p>',22),l=[s];function d(h,n,i,u,p,c){return t(),a("div",null,l)}const m=e(o,[["render",d]]);export{b as __pageData,m as default};
