import{_ as e,c as t,o,a5 as a}from"./chunks/framework.-E9IboRH.js";const h=JSON.parse('{"title":"Vue 双向数据绑定？","description":"","frontmatter":{},"headers":[],"relativePath":"汇总面试题/前端Vue/基础题/Vue双向数据绑定？.md","filePath":"汇总面试题/前端Vue/基础题/Vue双向数据绑定？.md"}'),r={name:"汇总面试题/前端Vue/基础题/Vue双向数据绑定？.md"},_=a('<h1 id="vue-双向数据绑定" tabindex="-1">Vue 双向数据绑定？ <a class="header-anchor" href="#vue-双向数据绑定" aria-label="Permalink to &quot;Vue 双向数据绑定？&quot;">​</a></h1><p>双向数据绑定是指<code>数据模型</code> 和 <code>视图</code>之间的同步自动更新机制。Vue 实现核心是通过指令 <code>v-model</code>，</p><h2 id="步骤" tabindex="-1">步骤： <a class="header-anchor" href="#步骤" aria-label="Permalink to &quot;步骤：&quot;">​</a></h2><ol><li><p><strong>数据劫持</strong>：Vue 使用了 Object.defineProperty 或 Proxy 来劫持数据对象的属性，当属性的值发生变化时，会触发相应的更新操作。</p></li><li><p><strong>模板编译</strong>：Vue 通过解析模板中的指令和插值表达式，生成一个渲染函数。这个渲染函数会将数据模型中的数据与视图中的 DOM 元素建立联系。</p></li><li><p><strong>事件监听</strong>：当用户输入时，Vue 会监听相应的事件，并且更新数据模型中对应的数据。</p></li><li><p><strong>数据更新</strong>：一旦数据模型中的数据发生变化，Vue 就会通过数据劫持机制自动更新视图，保持数据模型和视图之间的同步。</p></li></ol>',4),n=[_];function s(c,i,l,d,u,p){return o(),t("div",null,n)}const m=e(r,[["render",s]]);export{h as __pageData,m as default};
