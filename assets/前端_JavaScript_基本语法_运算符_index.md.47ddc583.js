import{_ as s,o as a,c as n,S as l}from"./chunks/framework.2524ba1c.js";const d=JSON.parse('{"title":"运算符","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"前端/JavaScript/基本语法/运算符/index.md","filePath":"前端/JavaScript/基本语法/运算符/index.md"}'),o={name:"前端/JavaScript/基本语法/运算符/index.md"},p=l(`<h1 id="运算符" tabindex="-1">运算符 <a class="header-anchor" href="#运算符" aria-label="Permalink to &quot;运算符&quot;">​</a></h1><h2 id="javascript-拥有如下类型的运算符" tabindex="-1">JavaScript 拥有如下类型的运算符： <a class="header-anchor" href="#javascript-拥有如下类型的运算符" aria-label="Permalink to &quot;JavaScript 拥有如下类型的运算符：&quot;">​</a></h2><p>JavaScript 的运算符，包括了赋值、比较、算数、位运算、逻辑、三元，一元，等等。</p><h3 id="赋值运算符-assignment-operators" tabindex="-1">赋值运算符（Assignment operators） <a class="header-anchor" href="#赋值运算符-assignment-operators" aria-label="Permalink to &quot;赋值运算符（Assignment operators）&quot;">​</a></h3><p>一个 赋值运算符 将它右边操作数的值赋给它左边的操作数。最简单的赋值运算符是等于（=），它将右边的操作数值赋给左边的操作数。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> y</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>解构，对于更复杂的赋值</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> foo </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> [</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">one</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">two</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">three</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">]</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">// 使用解构</span></span>
<span class="line"><span style="color:#C792EA;">var</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">[</span><span style="color:#A6ACCD;">one</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> two</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> three</span><span style="color:#89DDFF;">]</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> foo</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="比较运算符-comparison-operators" tabindex="-1">比较运算符（Comparison operators） <a class="header-anchor" href="#比较运算符-comparison-operators" aria-label="Permalink to &quot;比较运算符（Comparison operators）&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">==    相等</span></span>
<span class="line"><span style="color:#A6ACCD;">!=    不相等</span></span>
<span class="line"><span style="color:#A6ACCD;">===   数相等且类型相同</span></span>
<span class="line"><span style="color:#A6ACCD;">!==   不相等或类型不同</span></span>
<span class="line"><span style="color:#A6ACCD;">&gt;     大于</span></span>
<span class="line"><span style="color:#A6ACCD;">&gt;=    大于或等于</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;     小于</span></span>
<span class="line"><span style="color:#A6ACCD;">&lt;=    小于或等于</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">3</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="算数运算符-arithmetic-operators" tabindex="-1">算数运算符（Arithmetic operators） <a class="header-anchor" href="#算数运算符-arithmetic-operators" aria-label="Permalink to &quot;算数运算符（Arithmetic operators）&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">+   加</span></span>
<span class="line"><span style="color:#A6ACCD;">-   减</span></span>
<span class="line"><span style="color:#A6ACCD;">*   乘</span></span>
<span class="line"><span style="color:#A6ACCD;">/   除</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">%   求余</span></span>
<span class="line"><span style="color:#A6ACCD;">++  自增</span></span>
<span class="line"><span style="color:#A6ACCD;">--  自减</span></span>
<span class="line"><span style="color:#A6ACCD;">-   一元负值符</span></span>
<span class="line"><span style="color:#A6ACCD;">+   一元正值符</span></span>
<span class="line"><span style="color:#A6ACCD;">**  指数运算符</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">/</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="位运算符-bitwise-operators" tabindex="-1">位运算符（Bitwise operators） <a class="header-anchor" href="#位运算符-bitwise-operators" aria-label="Permalink to &quot;位运算符（Bitwise operators）&quot;">​</a></h3><p>位运算符将它的操作数视为 32 位元的二进制串（0 和 1 组成）而非十进制八进制或十六进制数。例如：十进制数字 9 用二进制表示为 1001，位运算符就是在这个二进制表示上执行运算，但是返回结果是标准的 JavaScript 数值。</p><ul><li>按位移位运算符</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&lt;&lt; 按位左移运算符。</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">&gt;&gt; 按位右移运算符。</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">&gt;&gt;&gt; 按位无符号右移运算符。</span></span></code></pre></div><ul><li>按位二元运算符</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&amp; 按位与。</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">| 按位或。</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">^ 按位异或。</span></span></code></pre></div><ul><li>按位一元运算符</li></ul><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">~ 按位非运算符。</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">~</span><span style="color:#A6ACCD;">a</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="逻辑运算符-logical-operators" tabindex="-1">逻辑运算符（Logical operators） <a class="header-anchor" href="#逻辑运算符-logical-operators" aria-label="Permalink to &quot;逻辑运算符（Logical operators）&quot;">​</a></h3><div class="language-"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">&amp;&amp; 逻辑与</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">|| 逻辑或</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">! 逻辑非</span></span>
<span class="line"><span style="color:#A6ACCD;"></span></span>
<span class="line"><span style="color:#A6ACCD;">?? 空合并运算符。</span></span></code></pre></div><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FF9CAC;">true</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&amp;&amp;</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">false</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="条件-三元-运算符-conditional-operator" tabindex="-1">条件（三元）运算符（Conditional operator） <a class="header-anchor" href="#条件-三元-运算符-conditional-operator" aria-label="Permalink to &quot;条件（三元）运算符（Conditional operator）&quot;">​</a></h3><ul><li>(condition ? ifTrue : ifFalse)</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> age </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">age </span><span style="color:#89DDFF;">&gt;=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">18</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">?</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">adult</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">minor</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="逗号运算符-comma-operator" tabindex="-1">逗号运算符（Comma operator） <a class="header-anchor" href="#逗号运算符-comma-operator" aria-label="Permalink to &quot;逗号运算符（Comma operator）&quot;">​</a></h3><p>逗号（,）运算符对它的每个操作数从左到右求值，并返回最后一个操作数的值。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> (x</span><span style="color:#89DDFF;">++,</span><span style="color:#A6ACCD;"> x)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(x)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Expected output: 2</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">x </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> (</span><span style="color:#F78C6C;">2</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">3</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">console</span><span style="color:#89DDFF;">.</span><span style="color:#82AAFF;">log</span><span style="color:#A6ACCD;">(x)</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// Expected output: 3</span></span></code></pre></div><h3 id="一元运算符-unary-operators" tabindex="-1">一元运算符（Unary operators） <a class="header-anchor" href="#一元运算符-unary-operators" aria-label="Permalink to &quot;一元运算符（Unary operators）&quot;">​</a></h3><p>一元操作符仅对应一个操作数。</p><ul><li>delete</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">delete</span><span style="color:#A6ACCD;"> objectName</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">property</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>typeof</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> operand</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>void</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">void</span><span style="color:#A6ACCD;"> expression</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h3 id="关系运算符-relational-operator" tabindex="-1">关系运算符（Relational operator） <a class="header-anchor" href="#关系运算符-relational-operator" aria-label="Permalink to &quot;关系运算符（Relational operator）&quot;">​</a></h3><p>关系运算符对操作数进行比较，根据比较结果真或假，返回相应的布尔值。</p><ul><li>in</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">propNameOrNumber </span><span style="color:#89DDFF;">in</span><span style="color:#A6ACCD;"> objectName</span><span style="color:#89DDFF;">;</span></span></code></pre></div><ul><li>instanceof</li></ul><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">objectName </span><span style="color:#89DDFF;">instanceof</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">objectType</span><span style="color:#89DDFF;">;</span></span></code></pre></div><h1 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h1><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Expressions_and_operators#%E8%A1%A8%E8%BE%BE%E5%BC%8F" target="_blank" rel="noreferrer">https://developer.mozilla.org</a></p>`,48),e=[p];function t(c,r,i,C,y,D){return a(),n("div",null,e)}const F=s(o,[["render",t]]);export{d as __pageData,F as default};
