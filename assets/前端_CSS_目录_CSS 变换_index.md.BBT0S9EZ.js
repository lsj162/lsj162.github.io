import{_ as a,c as e,o as t,a5 as r}from"./chunks/framework.AYenO5Lm.js";const q=JSON.parse('{"title":"CSS 变换属性","description":"","frontmatter":{},"headers":[],"relativePath":"前端/CSS/目录/CSS 变换/index.md","filePath":"前端/CSS/目录/CSS 变换/index.md"}'),o={name:"前端/CSS/目录/CSS 变换/index.md"},l=r('<h2 id="outline-deep" tabindex="-1">outline: deep <a class="header-anchor" href="#outline-deep" aria-label="Permalink to &quot;outline: deep&quot;">​</a></h2><p><a href="/前端/CSS/">返回</a></p><h1 id="css-变换属性" tabindex="-1">CSS 变换属性 <a class="header-anchor" href="#css-变换属性" aria-label="Permalink to &quot;CSS 变换属性&quot;">​</a></h1><p>有两个主要的属性被用来定义 CSS 变换：transform（或单独的 translate、rotate 以及 scale 属性）和 transform-origin。</p><h2 id="transform-origin" tabindex="-1">transform-origin <a class="header-anchor" href="#transform-origin" aria-label="Permalink to &quot;transform-origin&quot;">​</a></h2><p>指定原点的位置。默认值为元素的中心，可以被移动。很多变换需要用到这个属性，比如旋转、缩放和倾斜，它们都需要一个指定的点作为参数。</p><h2 id="transform" tabindex="-1">transform <a class="header-anchor" href="#transform" aria-label="Permalink to &quot;transform&quot;">​</a></h2><p>指定作用在元素上的变换。取值为空格分隔的一系列变换的列表，它们会像被组合操作请求一样被分别执行。复合变换按从右到左的顺序高效地应用。</p><h3 id="matrix" tabindex="-1">matrix() <a class="header-anchor" href="#matrix" aria-label="Permalink to &quot;matrix()&quot;">​</a></h3><h3 id="matrix3d" tabindex="-1">matrix3d() <a class="header-anchor" href="#matrix3d" aria-label="Permalink to &quot;matrix3d()&quot;">​</a></h3><h3 id="perspective" tabindex="-1">perspective() <a class="header-anchor" href="#perspective" aria-label="Permalink to &quot;perspective()&quot;">​</a></h3><h3 id="rotate" tabindex="-1">rotate() <a class="header-anchor" href="#rotate" aria-label="Permalink to &quot;rotate()&quot;">​</a></h3><h3 id="rotate3d" tabindex="-1">rotate3d() <a class="header-anchor" href="#rotate3d" aria-label="Permalink to &quot;rotate3d()&quot;">​</a></h3><h3 id="rotatex" tabindex="-1">rotateX() <a class="header-anchor" href="#rotatex" aria-label="Permalink to &quot;rotateX()&quot;">​</a></h3><h3 id="rotatey" tabindex="-1">rotateY() <a class="header-anchor" href="#rotatey" aria-label="Permalink to &quot;rotateY()&quot;">​</a></h3><h3 id="rotatez" tabindex="-1">rotateZ() <a class="header-anchor" href="#rotatez" aria-label="Permalink to &quot;rotateZ()&quot;">​</a></h3><h3 id="scale" tabindex="-1">scale() <a class="header-anchor" href="#scale" aria-label="Permalink to &quot;scale()&quot;">​</a></h3><h3 id="scale3d" tabindex="-1">scale3d() <a class="header-anchor" href="#scale3d" aria-label="Permalink to &quot;scale3d()&quot;">​</a></h3><h3 id="scalex" tabindex="-1">scaleX() <a class="header-anchor" href="#scalex" aria-label="Permalink to &quot;scaleX()&quot;">​</a></h3><h3 id="scaley" tabindex="-1">scaleY() <a class="header-anchor" href="#scaley" aria-label="Permalink to &quot;scaleY()&quot;">​</a></h3><h3 id="scalez" tabindex="-1">scaleZ() <a class="header-anchor" href="#scalez" aria-label="Permalink to &quot;scaleZ()&quot;">​</a></h3><h3 id="skew" tabindex="-1">skew() <a class="header-anchor" href="#skew" aria-label="Permalink to &quot;skew()&quot;">​</a></h3><h3 id="skewx" tabindex="-1">skewX() <a class="header-anchor" href="#skewx" aria-label="Permalink to &quot;skewX()&quot;">​</a></h3><h3 id="skewy" tabindex="-1">skewY() <a class="header-anchor" href="#skewy" aria-label="Permalink to &quot;skewY()&quot;">​</a></h3><h3 id="translate" tabindex="-1">translate() <a class="header-anchor" href="#translate" aria-label="Permalink to &quot;translate()&quot;">​</a></h3><h3 id="translate3d" tabindex="-1">translate3d() <a class="header-anchor" href="#translate3d" aria-label="Permalink to &quot;translate3d()&quot;">​</a></h3><h3 id="translatex" tabindex="-1">translateX() <a class="header-anchor" href="#translatex" aria-label="Permalink to &quot;translateX()&quot;">​</a></h3><h3 id="translatey" tabindex="-1">translateY() <a class="header-anchor" href="#translatey" aria-label="Permalink to &quot;translateY()&quot;">​</a></h3><h3 id="translatez" tabindex="-1">translateZ() <a class="header-anchor" href="#translatez" aria-label="Permalink to &quot;translateZ()&quot;">​</a></h3>',29),i=[l];function s(n,h,d,c,u,m){return t(),e("div",null,i)}const x=a(o,[["render",s]]);export{q as __pageData,x as default};
