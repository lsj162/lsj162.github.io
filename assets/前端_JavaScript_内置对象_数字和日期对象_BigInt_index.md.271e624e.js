import{_ as s,o as a,c as n,S as t}from"./chunks/framework.2524ba1c.js";const F=JSON.parse('{"title":"BigInt","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"前端/JavaScript/内置对象/数字和日期对象/BigInt/index.md","filePath":"前端/JavaScript/内置对象/数字和日期对象/BigInt/index.md"}'),o={name:"前端/JavaScript/内置对象/数字和日期对象/BigInt/index.md"},e=t(`<h1 id="bigint" tabindex="-1">BigInt <a class="header-anchor" href="#bigint" aria-label="Permalink to &quot;BigInt&quot;">​</a></h1><p>BigInt 是一种内置对象，它提供了一种方法来表示大于 2^53 - 1 （9007199254740991） 的整数。这原本是 Javascript 中可以用 Number 表示的最大数字。BigInt 可以表示任意大的整数。</p><div class="language-js"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#C792EA;">n</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bigint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span>
<span class="line"><span style="color:#89DDFF;">typeof</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">BigInt</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">1</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">===</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">bigint</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">// true</span></span></code></pre></div><h3 id="不支持" tabindex="-1">不支持 <a class="header-anchor" href="#不支持" aria-label="Permalink to &quot;不支持&quot;">​</a></h3><p>不能用于 Math 对象中的方法。</p><p>BigInt 不支持单目 (+) 运算符。</p><p>不能和任何 Number 实例混合运算，两者必须转换成同一种类型。</p><p>BigInt 变量在转换成 Number 变量时可能会丢失精度。</p>`,8),p=[e];function l(r,c,i,D,y,d){return a(),n("div",null,p)}const _=s(o,[["render",l]]);export{F as __pageData,_ as default};
