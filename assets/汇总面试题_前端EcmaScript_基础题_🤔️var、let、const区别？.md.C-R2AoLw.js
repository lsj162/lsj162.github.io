import{_ as e,c as o,o as t,a5 as c}from"./chunks/framework.-E9IboRH.js";const m=JSON.parse('{"title":"基础题：ES6：var、let、const 区别？","description":"","frontmatter":{},"headers":[],"relativePath":"汇总面试题/前端EcmaScript/基础题/🤔️var、let、const区别？.md","filePath":"汇总面试题/前端EcmaScript/基础题/🤔️var、let、const区别？.md"}'),l={name:"汇总面试题/前端EcmaScript/基础题/🤔️var、let、const区别？.md"},d=c('<h1 id="基础题-es6-var、let、const-区别" tabindex="-1">基础题：ES6：var、let、const 区别？ <a class="header-anchor" href="#基础题-es6-var、let、const-区别" aria-label="Permalink to &quot;基础题：ES6：var、let、const 区别？&quot;">​</a></h1><p>都是用来声明变量的关键字；</p><ol><li><p><strong>作用域</strong>：</p><ul><li><code>var</code>具有函数级作用域。</li><li><code>let</code>和<code>const</code>具有块级作用域，意味在代码块外部不可见。</li></ul></li><li><p><strong>变量提升</strong>：</p><ul><li><code>var</code>声明的变量会被提升作用域的顶部。</li><li><code>let</code>或<code>const</code>声明的变量不会被提升。</li></ul></li><li><p><strong>重复声明</strong>：</p><ul><li><code>var</code>可以重复声明。</li><li><code>let</code>或<code>const</code>不能重复声明。</li></ul></li><li><p><strong>初始化</strong>：</p><ul><li><code>var</code>声明的变量在被初始化之前会被自动初始化为<code>undefined</code>。</li><li><code>let</code>声明的变量在被初始化之前保持未初始化状态。</li></ul></li><li><p><strong>可变性</strong>：</p><ul><li><code>var</code>或<code>let</code>可以随时修改。</li><li><code>const</code>声明的变量被认为是常量，一旦初始化后就不能再更改其值。</li></ul></li></ol><p>通常情况下，推荐优先使用<code>const</code>，只有当需要重新赋值的情况下才使用<code>let</code>，而尽量避免使用<code>var</code>。</p>',4),a=[d];function r(i,s,n,_,p,u){return t(),o("div",null,a)}const g=e(l,[["render",r]]);export{m as __pageData,g as default};
