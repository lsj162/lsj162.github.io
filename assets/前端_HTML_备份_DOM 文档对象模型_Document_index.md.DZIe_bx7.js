import{_ as e,c as t,o as a,a6 as o}from"./chunks/framework.DwCPU-X7.js";const b=JSON.parse('{"title":"Document","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"前端/HTML/备份/DOM 文档对象模型/Document/index.md","filePath":"前端/HTML/备份/DOM 文档对象模型/Document/index.md","lastUpdated":null}'),n={name:"前端/HTML/备份/DOM 文档对象模型/Document/index.md"},c=o('<h1 id="document" tabindex="-1">Document <a class="header-anchor" href="#document" aria-label="Permalink to &quot;Document&quot;">​</a></h1><h3 id="document-接口表示任何在浏览器中载入的网页-并作为网页内容的入口-也就是-dom-树。document-根据不同的文档类型。还能使用更多-api。例如-svg。" tabindex="-1">Document 接口表示任何在浏览器中载入的网页，并作为网页内容的入口，也就是 DOM 树。Document 根据不同的文档类型。还能使用更多 API。例如 SVG。 <a class="header-anchor" href="#document-接口表示任何在浏览器中载入的网页-并作为网页内容的入口-也就是-dom-树。document-根据不同的文档类型。还能使用更多-api。例如-svg。" aria-label="Permalink to &quot;Document 接口表示任何在浏览器中载入的网页，并作为网页内容的入口，也就是 DOM 树。Document 根据不同的文档类型。还能使用更多 API。例如 SVG。&quot;">​</a></h3><p>属性继承</p><div class="language-md vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">md</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">EventTarget &lt;- Node &lt;- Document</span></span></code></pre></div><h2 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h2><h3 id="document-activeelement-只读" tabindex="-1">Document.activeElement <code>只读</code> <a class="header-anchor" href="#document-activeelement-只读" aria-label="Permalink to &quot;Document.activeElement `只读`&quot;">​</a></h3><p>返回一个目前处于聚焦状态的 Element。</p><h3 id="document-adoptedstylesheets-en-us" tabindex="-1">Document.adoptedStyleSheets (en-US) <a class="header-anchor" href="#document-adoptedstylesheets-en-us" aria-label="Permalink to &quot;Document.adoptedStyleSheets (en-US)&quot;">​</a></h3><p>设置用于构造文档样式表的数组。这些样式表也可与同一文档的 shadow DOM 子树共享。</p><h3 id="document-body" tabindex="-1">Document.body <a class="header-anchor" href="#document-body" aria-label="Permalink to &quot;Document.body&quot;">​</a></h3><p>返回当前文档的 <code>&lt;body&gt;</code> 或 <code>&lt;frameset&gt;</code> 节点。</p><h3 id="document-characterset-只读" tabindex="-1">Document.characterSet <code>只读</code> <a class="header-anchor" href="#document-characterset-只读" aria-label="Permalink to &quot;Document.characterSet `只读`&quot;">​</a></h3><p>返回文档正在使用的字符集。</p><h3 id="document-childelementcount-en-us-只读" tabindex="-1">Document.childElementCount (en-US) <code>只读</code> <a class="header-anchor" href="#document-childelementcount-en-us-只读" aria-label="Permalink to &quot;Document.childElementCount (en-US) `只读`&quot;">​</a></h3><p>返回文档正在使用的子元素的数量。</p><h3 id="document-children-en-us-只读" tabindex="-1">Document.children (en-US) <code>只读</code> <a class="header-anchor" href="#document-children-en-us-只读" aria-label="Permalink to &quot;Document.children (en-US) `只读`&quot;">​</a></h3><p>返回当前文档的子元素。</p><h3 id="document-compatmode-只读" tabindex="-1">Document.compatMode <code>只读</code> <a class="header-anchor" href="#document-compatmode-只读" aria-label="Permalink to &quot;Document.compatMode `只读`&quot;">​</a></h3><p>指示文档是否以怪异模式（quirks）或严格模式（strict）渲染。</p><h3 id="document-contenttype-只读" tabindex="-1">Document.contentType <code>只读</code> <a class="header-anchor" href="#document-contenttype-只读" aria-label="Permalink to &quot;Document.contentType `只读`&quot;">​</a></h3><p>根据当前文档的 MIME 标头，返回它的 Content-Type。</p><h3 id="document-currentscript-只读" tabindex="-1">Document.currentScript <code>只读</code> <a class="header-anchor" href="#document-currentscript-只读" aria-label="Permalink to &quot;Document.currentScript `只读`&quot;">​</a></h3><p>返回目前正在处理且不是 JavaScript 模块的 <code>&lt;script&gt;</code> 元素。</p><h3 id="document-doctype-只读" tabindex="-1">Document.doctype <code>只读</code> <a class="header-anchor" href="#document-doctype-只读" aria-label="Permalink to &quot;Document.doctype `只读`&quot;">​</a></h3><p>返回当前文档的文档类型定义（Document Type Definition，DTD）。</p><h3 id="document-documentelement-只读" tabindex="-1">Document.documentElement <code>只读</code> <a class="header-anchor" href="#document-documentelement-只读" aria-label="Permalink to &quot;Document.documentElement `只读`&quot;">​</a></h3><p>返回当前文档的直接子节点。对于 HTML 文档，HTMLHtmlElement 对象一般代表该文档的<code>&lt;html&gt;</code> 元素。</p><h3 id="document-documenturi-只读" tabindex="-1">Document.documentURI <code>只读</code> <a class="header-anchor" href="#document-documenturi-只读" aria-label="Permalink to &quot;Document.documentURI `只读`&quot;">​</a></h3><p>以字符串的类型，返回当前文档的路径。</p><h3 id="document-embeds-只读" tabindex="-1">Document.embeds <code>只读</code> <a class="header-anchor" href="#document-embeds-只读" aria-label="Permalink to &quot;Document.embeds `只读`&quot;">​</a></h3><p>返回一个包含当前文档的嵌入式的元素 <code>&lt;embed&gt;</code> 的 HTMLCollection。</p><h3 id="document-firstelementchild-en-us-只读" tabindex="-1">Document.firstElementChild (en-US) <code>只读</code> <a class="header-anchor" href="#document-firstelementchild-en-us-只读" aria-label="Permalink to &quot;Document.firstElementChild (en-US) `只读`&quot;">​</a></h3><p>返回当前文档的第一个子元素。</p><h3 id="document-fonts" tabindex="-1">Document.fonts <a class="header-anchor" href="#document-fonts" aria-label="Permalink to &quot;Document.fonts&quot;">​</a></h3><p>返回当前文档的 FontFaceSet 接口。</p><h3 id="document-forms-只读" tabindex="-1">Document.forms <code>只读</code> <a class="header-anchor" href="#document-forms-只读" aria-label="Permalink to &quot;Document.forms `只读`&quot;">​</a></h3><p>返回一个包含当前文档中所有表单元素 <code>&lt;form&gt;</code> 的 HTMLCollection。</p><h3 id="document-fullscreenelement-只读" tabindex="-1">Document.fullscreenElement <code>只读</code> <a class="header-anchor" href="#document-fullscreenelement-只读" aria-label="Permalink to &quot;Document.fullscreenElement `只读`&quot;">​</a></h3><p>返回文档中正处于全屏模式的元素。</p><h3 id="document-head-只读" tabindex="-1">Document.head <code>只读</code> <a class="header-anchor" href="#document-head-只读" aria-label="Permalink to &quot;Document.head `只读`&quot;">​</a></h3><p>返回当前文档的 <code>&lt;head&gt;</code> 元素。</p><h3 id="document-hidden-只读" tabindex="-1">Document.hidden <code>只读</code> <a class="header-anchor" href="#document-hidden-只读" aria-label="Permalink to &quot;Document.hidden `只读`&quot;">​</a></h3><p>返回一个布尔值，表明当前页面是否隐藏。</p><h3 id="document-images-只读" tabindex="-1">Document.images <code>只读</code> <a class="header-anchor" href="#document-images-只读" aria-label="Permalink to &quot;Document.images `只读`&quot;">​</a></h3><p>返回当前文档中所包含的图片的 HTMLCollection。</p><h3 id="document-implementation-只读" tabindex="-1">Document.implementation <code>只读</code> <a class="header-anchor" href="#document-implementation-只读" aria-label="Permalink to &quot;Document.implementation `只读`&quot;">​</a></h3><p>返回与当前文档相关联的 DOM 实现。</p><h3 id="document-lastelementchild-en-us-只读" tabindex="-1">Document.lastElementChild (en-US) <code>只读</code> <a class="header-anchor" href="#document-lastelementchild-en-us-只读" aria-label="Permalink to &quot;Document.lastElementChild (en-US) `只读`&quot;">​</a></h3><p>返回当前文档的最后一个子元素。</p><h3 id="document-links-只读" tabindex="-1">Document.links <code>只读</code> <a class="header-anchor" href="#document-links-只读" aria-label="Permalink to &quot;Document.links `只读`&quot;">​</a></h3><p>返回一个包含文档中所有超链接的 HTMLCollection。</p><h3 id="document-pictureinpictureelement-只读" tabindex="-1">Document.pictureInPictureElement <code>只读</code> <a class="header-anchor" href="#document-pictureinpictureelement-只读" aria-label="Permalink to &quot;Document.pictureInPictureElement `只读`&quot;">​</a></h3><p>返回文档中正处于画中画模式的 Element。</p><h3 id="document-pictureinpictureenabled-只读" tabindex="-1">Document.pictureInPictureEnabled <code>只读</code> <a class="header-anchor" href="#document-pictureinpictureenabled-只读" aria-label="Permalink to &quot;Document.pictureInPictureEnabled `只读`&quot;">​</a></h3><p>若画中画特性可用，则返回 true。</p><h3 id="document-plugins-只读" tabindex="-1">Document.plugins <code>只读</code> <a class="header-anchor" href="#document-plugins-只读" aria-label="Permalink to &quot;Document.plugins `只读`&quot;">​</a></h3><p>返回一个包含可用插件的 HTMLCollection。</p><h3 id="document-pointerlockelement-只读" tabindex="-1">Document.pointerLockElement <code>只读</code> <a class="header-anchor" href="#document-pointerlockelement-只读" aria-label="Permalink to &quot;Document.pointerLockElement `只读`&quot;">​</a></h3><p>当指针被锁定时，返回鼠标事件的目标的元素集合。若锁定正处于等待状态、指针已被解锁，或是目标正处于另一个文档中，则返回 null。</p><h3 id="document-scripts-只读" tabindex="-1">Document.scripts <code>只读</code> <a class="header-anchor" href="#document-scripts-只读" aria-label="Permalink to &quot;Document.scripts `只读`&quot;">​</a></h3><p>返回包含文档中所有的 <code>&lt;script&gt;</code> 元素的 HTMLCollection。</p><h3 id="document-scrollingelement-只读" tabindex="-1">Document.scrollingElement <code>只读</code> <a class="header-anchor" href="#document-scrollingelement-只读" aria-label="Permalink to &quot;Document.scrollingElement `只读`&quot;">​</a></h3><p>返回对滚动文档的 Element 的引用。</p><h3 id="document-stylesheets-只读" tabindex="-1">Document.styleSheets <code>只读</code> <a class="header-anchor" href="#document-stylesheets-只读" aria-label="Permalink to &quot;Document.styleSheets `只读`&quot;">​</a></h3><p>返回一个包含显式链接或嵌入到文档中的 CSSStyleSheet 对象的 StyleSheetList。</p><h3 id="document-timeline-只读" tabindex="-1">Document.timeline <code>只读</code> <a class="header-anchor" href="#document-timeline-只读" aria-label="Permalink to &quot;Document.timeline `只读`&quot;">​</a></h3><p>返回 DocumentTimeline (en-US) 的一个实例，该实例是在页面加载时自动创建的。</p><h3 id="document-visibilitystate-只读" tabindex="-1">Document.visibilityState <code>只读</code> <a class="header-anchor" href="#document-visibilitystate-只读" aria-label="Permalink to &quot;Document.visibilityState `只读`&quot;">​</a></h3><p>返回一个 string，表明当前文档的可见性。可能的取值有 visible、hidden、prerender 和 unloaded。</p><h2 id="htmldocument-的扩展" tabindex="-1">HTMLDocument 的扩展 <a class="header-anchor" href="#htmldocument-的扩展" aria-label="Permalink to &quot;HTMLDocument 的扩展&quot;">​</a></h2><p>HTML 文件的 ### Document 接口继承自 HTMLDocument 接口，或扩展了这些方法：</p><h3 id="document-cookie" tabindex="-1">Document.cookie <a class="header-anchor" href="#document-cookie" aria-label="Permalink to &quot;Document.cookie&quot;">​</a></h3><p>返回一个使用分号分隔的 cookie 列表，或设置（写入）一个 cookie。</p><h3 id="document-defaultview-只读" tabindex="-1">Document.defaultView <code>只读</code> <a class="header-anchor" href="#document-defaultview-只读" aria-label="Permalink to &quot;Document.defaultView `只读`&quot;">​</a></h3><p>返回一个对 window 对象的引用。</p><h3 id="document-designmode" tabindex="-1">Document.designMode <a class="header-anchor" href="#document-designmode" aria-label="Permalink to &quot;Document.designMode&quot;">​</a></h3><p>获取或设置编辑整个文档的能力。</p><h3 id="document-dir" tabindex="-1">Document.dir <a class="header-anchor" href="#document-dir" aria-label="Permalink to &quot;Document.dir&quot;">​</a></h3><p>获取或设置文档的文字方向（rtl 或 ltr）。</p><h3 id="document-lastmodified-只读" tabindex="-1">Document.lastModified <code>只读</code> <a class="header-anchor" href="#document-lastmodified-只读" aria-label="Permalink to &quot;Document.lastModified `只读`&quot;">​</a></h3><p>返回文档最后修改的时间。</p><h3 id="document-location-只读" tabindex="-1">Document.location <code>只读</code> <a class="header-anchor" href="#document-location-只读" aria-label="Permalink to &quot;Document.location `只读`&quot;">​</a></h3><p>返回当前文档的 URI。</p><h3 id="document-readystate-只读" tabindex="-1">Document.readyState <code>只读</code> <a class="header-anchor" href="#document-readystate-只读" aria-label="Permalink to &quot;Document.readyState `只读`&quot;">​</a></h3><p>返回当前文档的加载状态。</p><h3 id="document-referrer-只读" tabindex="-1">Document.referrer <code>只读</code> <a class="header-anchor" href="#document-referrer-只读" aria-label="Permalink to &quot;Document.referrer `只读`&quot;">​</a></h3><p>返回来源页面的 URI。</p><h3 id="document-title" tabindex="-1">Document.title <a class="header-anchor" href="#document-title" aria-label="Permalink to &quot;Document.title&quot;">​</a></h3><p>获取或设置当前文档的标题。</p><h3 id="document-url-只读" tabindex="-1">Document.URL <code>只读</code> <a class="header-anchor" href="#document-url-只读" aria-label="Permalink to &quot;Document.URL `只读`&quot;">​</a></h3><p>以字符串形式返回文档的地址栏链接。</p><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><p>该接口同样继承了 Node 和 EventTarget 接口。</p><h3 id="document-adoptnode" tabindex="-1">Document.adoptNode() <a class="header-anchor" href="#document-adoptnode" aria-label="Permalink to &quot;Document.adoptNode()&quot;">​</a></h3><p>从外部文档中采用的节点。</p><h3 id="document-append-en-us" tabindex="-1">Document.append() (en-US) <a class="header-anchor" href="#document-append-en-us" aria-label="Permalink to &quot;Document.append() (en-US)&quot;">​</a></h3><p>在文档的最后一个子节点后插入一个 Node 对象或字符串对象的集合。</p><h3 id="document-caretpositionfrompoint" tabindex="-1">Document.caretPositionFromPoint() <a class="header-anchor" href="#document-caretpositionfrompoint" aria-label="Permalink to &quot;Document.caretPositionFromPoint()&quot;">​</a></h3><p>返回一个包含 DOM 节点（包含插入符号以及该符号在节点中的字符偏移量）的 CaretPosition 对象。</p><h3 id="document-createattribute" tabindex="-1">Document.createAttribute() <a class="header-anchor" href="#document-createattribute" aria-label="Permalink to &quot;Document.createAttribute()&quot;">​</a></h3><p>创建一个新的 Attr 对象并返回。</p><h3 id="document-createattributens-en-us" tabindex="-1">Document.createAttributeNS() (en-US) <a class="header-anchor" href="#document-createattributens-en-us" aria-label="Permalink to &quot;Document.createAttributeNS() (en-US)&quot;">​</a></h3><p>在给定命名空间创建一个新的属性节点并返回。</p><h3 id="document-createcdatasection" tabindex="-1">Document.createCDATASection() <a class="header-anchor" href="#document-createcdatasection" aria-label="Permalink to &quot;Document.createCDATASection()&quot;">​</a></h3><p>创建一个新的数据（CDATA）节点并返回。</p><h3 id="document-createcomment" tabindex="-1">Document.createComment() <a class="header-anchor" href="#document-createcomment" aria-label="Permalink to &quot;Document.createComment()&quot;">​</a></h3><p>创建一个新的注释节点并返回。</p><h3 id="document-createdocumentfragment" tabindex="-1">Document.createDocumentFragment() <a class="header-anchor" href="#document-createdocumentfragment" aria-label="Permalink to &quot;Document.createDocumentFragment()&quot;">​</a></h3><p>创建一个新的文档片段。</p><h3 id="document-createelement" tabindex="-1">Document.createElement() <a class="header-anchor" href="#document-createelement" aria-label="Permalink to &quot;Document.createElement()&quot;">​</a></h3><p>用给定标签名创建一个新的元素。</p><h3 id="document-createelementns" tabindex="-1">Document.createElementNS() <a class="header-anchor" href="#document-createelementns" aria-label="Permalink to &quot;Document.createElementNS()&quot;">​</a></h3><p>用给定标签名和命名空间创建一个新的元素。</p><h3 id="document-createevent" tabindex="-1">Document.createEvent() <a class="header-anchor" href="#document-createevent" aria-label="Permalink to &quot;Document.createEvent()&quot;">​</a></h3><p>创建一个事件对象。</p><h3 id="document-createnodeiterator" tabindex="-1">Document.createNodeIterator() <a class="header-anchor" href="#document-createnodeiterator" aria-label="Permalink to &quot;Document.createNodeIterator()&quot;">​</a></h3><p>创建一个 NodeIterator 对象。</p><h3 id="document-createprocessinginstruction" tabindex="-1">Document.createProcessingInstruction() <a class="header-anchor" href="#document-createprocessinginstruction" aria-label="Permalink to &quot;Document.createProcessingInstruction()&quot;">​</a></h3><p>创建一个新的 ProcessingInstruction (en-US) 对象。</p><h3 id="document-createrange" tabindex="-1">Document.createRange() <a class="header-anchor" href="#document-createrange" aria-label="Permalink to &quot;Document.createRange()&quot;">​</a></h3><p>创建一个 Range 对象。</p><h3 id="document-createtextnode" tabindex="-1">Document.createTextNode() <a class="header-anchor" href="#document-createtextnode" aria-label="Permalink to &quot;Document.createTextNode()&quot;">​</a></h3><p>创建一个文本节点。</p><h3 id="document-createtreewalker" tabindex="-1">Document.createTreeWalker() <a class="header-anchor" href="#document-createtreewalker" aria-label="Permalink to &quot;Document.createTreeWalker()&quot;">​</a></h3><p>创建一个 TreeWalker 对象。</p><h3 id="document-elementfrompoint" tabindex="-1">Document.elementFromPoint() <a class="header-anchor" href="#document-elementfrompoint" aria-label="Permalink to &quot;Document.elementFromPoint()&quot;">​</a></h3><p>返回指定坐标最顶层的元素。</p><h3 id="document-elementsfrompoint" tabindex="-1">Document.elementsFromPoint() <a class="header-anchor" href="#document-elementsfrompoint" aria-label="Permalink to &quot;Document.elementsFromPoint()&quot;">​</a></h3><p>返回包含指定坐标下所有元素的数组。</p><h3 id="document-exitpictureinpicture" tabindex="-1">Document.exitPictureInPicture() <a class="header-anchor" href="#document-exitpictureinpicture" aria-label="Permalink to &quot;Document.exitPictureInPicture()&quot;">​</a></h3><p>从浮动的画中画窗口中移除视频，并返回到它的原始容器。</p><h3 id="document-exitpointerlock" tabindex="-1">Document.exitPointerLock() <a class="header-anchor" href="#document-exitpointerlock" aria-label="Permalink to &quot;Document.exitPointerLock()&quot;">​</a></h3><p>释放指针锁。</p><h3 id="document-getanimations-en-us" tabindex="-1">Document.getAnimations() (en-US) <a class="header-anchor" href="#document-getanimations-en-us" aria-label="Permalink to &quot;Document.getAnimations() (en-US)&quot;">​</a></h3><p>返回包含所有目前有效的 Animation 对象（其目标元素为 document）的数组。</p><h3 id="document-getelementbyid" tabindex="-1">Document.getElementById() <a class="header-anchor" href="#document-getelementbyid" aria-label="Permalink to &quot;Document.getElementById()&quot;">​</a></h3><p>返回标识元素的引用对象。</p><h3 id="document-getelementsbyclassname" tabindex="-1">Document.getElementsByClassName() <a class="header-anchor" href="#document-getelementsbyclassname" aria-label="Permalink to &quot;Document.getElementsByClassName()&quot;">​</a></h3><p>返回具有给定类名的元素列表。</p><h3 id="document-getelementsbytagname" tabindex="-1">Document.getElementsByTagName() <a class="header-anchor" href="#document-getelementsbytagname" aria-label="Permalink to &quot;Document.getElementsByTagName()&quot;">​</a></h3><p>返回具有给定标签名的元素列表。</p><h3 id="document-getelementsbytagnamens" tabindex="-1">Document.getElementsByTagNameNS() <a class="header-anchor" href="#document-getelementsbytagnamens" aria-label="Permalink to &quot;Document.getElementsByTagNameNS()&quot;">​</a></h3><p>返回具有给定标签名和命名空间的元素列表。</p><h3 id="document-getselection-en-us" tabindex="-1">Document.getSelection() (en-US) <a class="header-anchor" href="#document-getselection-en-us" aria-label="Permalink to &quot;Document.getSelection() (en-US)&quot;">​</a></h3><p>返回一个 Selection 对象，表示用户选择的文本范围或是插入符号当前的位置。</p><h3 id="document-hasstorageaccess" tabindex="-1">Document.hasStorageAccess() <a class="header-anchor" href="#document-hasstorageaccess" aria-label="Permalink to &quot;Document.hasStorageAccess()&quot;">​</a></h3><p>返回一个 Promise，会兑现一个布尔值，用于表示文档是否有访问第一方储存的权限。</p><h3 id="document-importnode" tabindex="-1">Document.importNode() <a class="header-anchor" href="#document-importnode" aria-label="Permalink to &quot;Document.importNode()&quot;">​</a></h3><p>返回外部文档的节点的拷贝。</p><h3 id="document-prepend-en-us" tabindex="-1">Document.prepend() (en-US) <a class="header-anchor" href="#document-prepend-en-us" aria-label="Permalink to &quot;Document.prepend() (en-US)&quot;">​</a></h3><p>在文档的第一个子节点前插入一个 Node 对象或字符串对象的集合。</p><h3 id="document-queryselector" tabindex="-1">Document.querySelector() <a class="header-anchor" href="#document-queryselector" aria-label="Permalink to &quot;Document.querySelector()&quot;">​</a></h3><p>返回文档中与指定的选择器匹配的第一个元素节点。</p><h3 id="document-queryselectorall" tabindex="-1">Document.querySelectorAll() <a class="header-anchor" href="#document-queryselectorall" aria-label="Permalink to &quot;Document.querySelectorAll()&quot;">​</a></h3><p>返回包含文档中与指定的选择器匹配的所有元素节点的列表。</p><h3 id="document-replacechildren-en-us" tabindex="-1">Document.replaceChildren() (en-US) <a class="header-anchor" href="#document-replacechildren-en-us" aria-label="Permalink to &quot;Document.replaceChildren() (en-US)&quot;">​</a></h3><p>用一哥指定的新的子节点集合替换替换文档中现有的子节点。</p><h3 id="document-requeststorageaccess-en-us" tabindex="-1">Document.requestStorageAccess() (en-US) <a class="header-anchor" href="#document-requeststorageaccess-en-us" aria-label="Permalink to &quot;Document.requestStorageAccess() (en-US)&quot;">​</a></h3><p>返回一个 Promise，若第一方存储权限可用，则兑现，否则拒绝。</p><h3 id="document-接口使用-xpathevaluator-接口扩展" tabindex="-1">Document 接口使用 XPathEvaluator 接口扩展： <a class="header-anchor" href="#document-接口使用-xpathevaluator-接口扩展" aria-label="Permalink to &quot;Document 接口使用 XPathEvaluator 接口扩展：&quot;">​</a></h3><h3 id="document-createexpression" tabindex="-1">Document.createExpression() <a class="header-anchor" href="#document-createexpression" aria-label="Permalink to &quot;Document.createExpression()&quot;">​</a></h3><p>编译一个 XPathExpression (en-US)，以用于（重复）执行。</p><h3 id="document-creatensresolver-en-us" tabindex="-1">Document.createNSResolver() (en-US) <a class="header-anchor" href="#document-creatensresolver-en-us" aria-label="Permalink to &quot;Document.createNSResolver() (en-US)&quot;">​</a></h3><p>创建一个 XPathNSResolver (en-US) 对象。</p><h3 id="document-evaluate" tabindex="-1">Document.evaluate() <a class="header-anchor" href="#document-evaluate" aria-label="Permalink to &quot;Document.evaluate()&quot;">​</a></h3><p>执行一个 XPath 表达式。</p><h2 id="html-文档的扩展" tabindex="-1">HTML 文档的扩展 <a class="header-anchor" href="#html-文档的扩展" aria-label="Permalink to &quot;HTML 文档的扩展&quot;">​</a></h2><p>HTML 文档的 ### Document 接口继承自 HTMLDocument 接口，或扩展了这些方法：</p><h3 id="document-close" tabindex="-1">Document.close() <a class="header-anchor" href="#document-close" aria-label="Permalink to &quot;Document.close()&quot;">​</a></h3><p>关闭用于写入的文档流。</p><h3 id="document-getelementsbyname" tabindex="-1">Document.getElementsByName() <a class="header-anchor" href="#document-getelementsbyname" aria-label="Permalink to &quot;Document.getElementsByName()&quot;">​</a></h3><p>返回一个具有给定名称的元素的列表。</p><h3 id="document-hasfocus" tabindex="-1">Document.hasFocus() <a class="header-anchor" href="#document-hasfocus" aria-label="Permalink to &quot;Document.hasFocus()&quot;">​</a></h3><p>若焦点目前位于给定的文档内，则返回 true。</p><h3 id="document-open" tabindex="-1">Document.open() <a class="header-anchor" href="#document-open" aria-label="Permalink to &quot;Document.open()&quot;">​</a></h3><p>打开用于写入的文档流。</p><h3 id="document-write" tabindex="-1">Document.write() <a class="header-anchor" href="#document-write" aria-label="Permalink to &quot;Document.write()&quot;">​</a></h3><p>向文档写入文本。</p><h3 id="document-writeln" tabindex="-1">Document.writeln() <a class="header-anchor" href="#document-writeln" aria-label="Permalink to &quot;Document.writeln()&quot;">​</a></h3><p>向文档写入一行文本。</p>',180),r=[c];function d(u,i,m,l,h,s){return a(),t("div",null,r)}const D=e(n,[["render",d]]);export{b as __pageData,D as default};
