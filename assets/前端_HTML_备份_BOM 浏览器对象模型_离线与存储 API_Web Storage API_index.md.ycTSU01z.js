import{_ as e,o as a,c as t,R as r}from"./chunks/framework.FQOLfzW2.js";const _=JSON.parse('{"title":"Storage","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"前端/HTML/备份/BOM 浏览器对象模型/离线与存储 API/Web Storage API/index.md","filePath":"前端/HTML/备份/BOM 浏览器对象模型/离线与存储 API/Web Storage API/index.md"}'),o={name:"前端/HTML/备份/BOM 浏览器对象模型/离线与存储 API/Web Storage API/index.md"},i=r('<h1 id="storage" tabindex="-1">Storage <a class="header-anchor" href="#storage" aria-label="Permalink to &quot;Storage&quot;">​</a></h1><p>作为 Web Storage API 的接口，Storage 提供了访问特定域名下的会话存储或本地存储的功能，例如，可以添加、修改或删除存储的数据项。</p><h2 id="方法" tabindex="-1">方法 <a class="header-anchor" href="#方法" aria-label="Permalink to &quot;方法&quot;">​</a></h2><h3 id="storage-key" tabindex="-1">Storage.key() <a class="header-anchor" href="#storage-key" aria-label="Permalink to &quot;Storage.key()&quot;">​</a></h3><p>该方法接受一个数值 n 作为参数，并返回存储中的第 n 个键名。</p><h3 id="storage-getitem" tabindex="-1">Storage.getItem() <a class="header-anchor" href="#storage-getitem" aria-label="Permalink to &quot;Storage.getItem()&quot;">​</a></h3><p>该方法接受一个键名作为参数，返回键名对应的值。</p><h3 id="storage-setitem" tabindex="-1">Storage.setItem() <a class="header-anchor" href="#storage-setitem" aria-label="Permalink to &quot;Storage.setItem()&quot;">​</a></h3><p>该方法接受一个键名和值作为参数，将会把键值对添加到存储中，如果键名存在，则更新其对应的值。</p><h3 id="storage-removeitem" tabindex="-1">Storage.removeItem() <a class="header-anchor" href="#storage-removeitem" aria-label="Permalink to &quot;Storage.removeItem()&quot;">​</a></h3><p>该方法接受一个键名作为参数，并把该键名从存储中删除。</p><h3 id="storage-clear" tabindex="-1">Storage.clear() <a class="header-anchor" href="#storage-clear" aria-label="Permalink to &quot;Storage.clear()&quot;">​</a></h3><p>调用该方法会清空存储中的所有键名。</p><h3 id="参考链接" tabindex="-1">参考链接 <a class="header-anchor" href="#参考链接" aria-label="Permalink to &quot;参考链接&quot;">​</a></h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Storage" target="_blank" rel="noreferrer">MDN 官网：https://developer.mozilla.org/zh-CN/docs/Web/API/Storage</a></p>',15),s=[i];function l(h,n,d,c,g,m){return a(),t("div",null,s)}const S=e(o,[["render",l]]);export{_ as __pageData,S as default};
