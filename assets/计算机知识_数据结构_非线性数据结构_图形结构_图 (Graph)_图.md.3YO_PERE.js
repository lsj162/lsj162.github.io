import{_ as l,c as a,o as t,a6 as i}from"./chunks/framework.DwCPU-X7.js";const u=JSON.parse('{"title":"图 (Graph)","description":"","frontmatter":{},"headers":[],"relativePath":"计算机知识/数据结构/非线性数据结构/图形结构/图 (Graph)/图.md","filePath":"计算机知识/数据结构/非线性数据结构/图形结构/图 (Graph)/图.md","lastUpdated":1712539768000}'),e={name:"计算机知识/数据结构/非线性数据结构/图形结构/图 (Graph)/图.md"},r=i('<h1 id="图-graph" tabindex="-1">图 (Graph) <a class="header-anchor" href="#图-graph" aria-label="Permalink to &quot;图 (Graph)&quot;">​</a></h1><p>图（Graph）是一种抽象的数据结构，用于表示对象之间的复杂关系。图由一组顶点（Vertex）和连接这些顶点的边（Edge）组成。</p><h2 id="图的定义包括以下几个关键概念" tabindex="-1">图的定义包括以下几个关键概念： <a class="header-anchor" href="#图的定义包括以下几个关键概念" aria-label="Permalink to &quot;图的定义包括以下几个关键概念：&quot;">​</a></h2><ul><li><ol><li>顶点（Vertex）：图中的一个节点。</li></ol></li><li><ol start="2"><li>边（Edge）：连接两个顶点的线。</li></ol></li><li><ol start="3"><li>边的权重（Edge Weight）：某些图中，边可以有与之关联的数值，称为权重。</li></ol></li><li><ol start="4"><li>无向图（Undirected Graph）：如果图中的边没有方向，即从顶点 A 到顶点 B 的边与从顶点 B 到顶点 A 的边相同，则称为无向图。在无向图中，边是双向的。</li></ol></li><li><ol start="5"><li>有向图（Directed Graph）：如果图中的边有方向，即从顶点 A 到顶点 B 的边与从顶点 B 到顶点 A 的边不同，则称为有向图。在有向图中，边是单向的，通常用箭头表示方向。</li></ol></li><li><ol start="6"><li>子图（Subgraph）：连接这些顶点的边组成的图。</li></ol></li><li><ol start="7"><li>路径（Path）：每对相邻顶点之间都存在一条边。</li></ol></li><li><ol start="8"><li>环（Cycle）：路径的起点和终点相同，形成一个闭合的循环。</li></ol></li><li><ol start="9"><li>连通图（Connected Graph）：对于图中的任意两个顶点，都存在一条路径连接它们。</li></ol></li><li><ol start="10"><li>完全图（Complete Graph）：图中任意两个不同的顶点都存在一条边相连。</li></ol></li></ul>',4),o=[r];function s(h,p,d,_,c,n){return t(),a("div",null,o)}const G=l(e,[["render",s]]);export{u as __pageData,G as default};
