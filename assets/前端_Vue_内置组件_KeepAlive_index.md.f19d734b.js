import{_ as e,o as a,c as s,S as t}from"./chunks/framework.2524ba1c.js";const v=JSON.parse('{"title":"KeepAlive​","description":"","frontmatter":{},"headers":[],"relativePath":"前端/Vue/内置组件/KeepAlive/index.md","filePath":"前端/Vue/内置组件/KeepAlive/index.md"}'),n={name:"前端/Vue/内置组件/KeepAlive/index.md"},l=t(`<h1 id="keepalive​" tabindex="-1">KeepAlive​ <a class="header-anchor" href="#keepalive​" aria-label="Permalink to &quot;KeepAlive​&quot;">​</a></h1><p>&lt;KeepAlive&gt; 是一个内置组件，它的功能是在多个组件间动态切换时缓存被移除的组件实例。</p><h2 id="示范" tabindex="-1">示范 <a class="header-anchor" href="#示范" aria-label="Permalink to &quot;示范&quot;">​</a></h2><div class="language-vue"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;">&lt;!-- 非活跃的组件将会被缓存！ --&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">KeepAlive</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">  &lt;component :is=&quot;activeComponent&quot; /&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">KeepAlive</span><span style="color:#89DDFF;">&gt;</span></span></code></pre></div>`,4),o=[l];function p(i,c,r,d,_,h){return a(),s("div",null,o)}const m=e(n,[["render",p]]);export{v as __pageData,m as default};
