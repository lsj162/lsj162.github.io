import{_ as s,o as a,c as n,S as e}from"./chunks/framework.2524ba1c.js";const F=JSON.parse('{"title":"伪元素","description":"","frontmatter":{},"headers":[],"relativePath":"前端/CSS/伪元素/index.md","filePath":"前端/CSS/伪元素/index.md"}'),o={name:"前端/CSS/伪元素/index.md"},l=e(`<h1 id="伪元素" tabindex="-1">伪元素 <a class="header-anchor" href="#伪元素" aria-label="Permalink to &quot;伪元素&quot;">​</a></h1><p>伪元素是一个附加至选择器末的关键词，允许你对被选择元素的特定部分修改样式。</p><h2 id="常见的伪元素" tabindex="-1">常见的伪元素： <a class="header-anchor" href="#常见的伪元素" aria-label="Permalink to &quot;常见的伪元素：&quot;">​</a></h2><h3 id="after" tabindex="-1">::after <a class="header-anchor" href="#after" aria-label="Permalink to &quot;::after&quot;">​</a></h3><p>CSS 伪元素::after 用来创建一个伪元素，作为已选中元素的最后一个子元素。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">q</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">after</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">»</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div><h3 id="before" tabindex="-1">::before <a class="header-anchor" href="#before" aria-label="Permalink to &quot;::before&quot;">​</a></h3><p>CSS 中，::before 创建一个伪元素，其将成为匹配选中的元素的第一个子元素。</p><div class="language-css"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">q</span><span style="color:#89DDFF;">::</span><span style="color:#C792EA;">before</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">«</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#B2CCD6;">color</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> blue</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre></div>`,9),p=[l];function t(r,c,i,D,C,y){return a(),n("div",null,p)}const h=s(o,[["render",t]]);export{F as __pageData,h as default};
